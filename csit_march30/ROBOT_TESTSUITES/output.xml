<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20200323 17:34:55.958" generator="Robot 3.0.2 (Python 2.7.12 on linux2)">
<suite source="/home/sathish123/PycharmProjects/NV_REPOSITORY/csit/ROBOT_TESTSUITES/SINGLE_CPE_HYBRID_SOLUTION_TEST.robot" id="s1" name="SINGLE CPE HYBRID SOLUTION TEST">
<kw type="setup" name="STARTUP">
<doc>Make connecection to Versa devices</doc>
<kw name="Login" library="VD1">
<status status="PASS" endtime="20200323 17:35:38.068" starttime="20200323 17:35:28.109"></status>
</kw>
<kw name="Get Data Dict" library="VD1">
<assign>
<var>${VD1}</var>
</assign>
<msg timestamp="20200323 17:35:38.069" level="INFO">${VD1} = {'ctlr_dict': {'MYS': ['NV-WC01-N7-MYS', 'NV-WC02-N7-MYS'], 'LON': ['NV-WC01-N5-LON', 'NV-WC02-N5-LON'], 'HKG': ['NV-WC01-N1-HKG', 'NV-WC02-N1-HKG'], 'SIN': ['NV-WC01-N6-SIN', 'NV-WC02-N6-SIN']}, 'GUI...</msg>
<status status="PASS" endtime="20200323 17:35:38.069" starttime="20200323 17:35:38.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${VM1}</arg>
</arguments>
<msg timestamp="20200323 17:35:38.071" level="INFO">${VM1} = CPE11_LAN_HOST1</msg>
<status status="PASS" endtime="20200323 17:35:38.072" starttime="20200323 17:35:38.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${VM2}</arg>
</arguments>
<msg timestamp="20200323 17:35:38.074" level="INFO">${VM2} = CPE12_LAN_HOST1</msg>
<status status="PASS" endtime="20200323 17:35:38.074" starttime="20200323 17:35:38.072"></status>
</kw>
<kw name="Cross Login" library="CPE1">
<msg timestamp="20200323 17:36:07.782" level="INFO">ssh admin@20.20.90.11
admin@20.20.90.11's password: 

             .---.,
            (      ``.
       _     \        )    __      ________ _____   _____
      (  `.   \      /     \ \    / /  ____|  __ \ / ____|  /\
       \    `. )    /       \ \  / /| |__  | |__) | (___   /  \
        \     |    /         \ \/ / |  __| |  _  / \___ \ / /\ \
         \    |   /           \  /  | |____| | \ \ ____) / ____ \
          \   |  /             \/   |______|_|  \_\_____/_/    \_\
           \  | /
            \_|/                     ___ _    _____  ___   ___  _ ___
                                    | __| |  | __\ \/ | \ / / \| | __|
                                    | _|| |__| _| &gt;  &lt; \ V /| .` | _|
                                    |_| |____|___/_/\_\ \_/ |_|\_|_|


Versa FlexVNF software
Release     :	16.1R2 (S9)
Release date:	20190628
Package ID  :	80561de	

Last login: Mon Mar 23 11:40:29 2020 from 10.92.116.67
admin@CPE11-HKG-HYBRD-IPC00190:~$ 
doing redispatch
set idle-timeout 0
[ok][2020-03-23 11:55:24]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt;</msg>
<status status="PASS" endtime="20200323 17:36:07.783" starttime="20200323 17:35:38.075"></status>
</kw>
<kw name="Cross Login" library="CPE2">
<msg timestamp="20200323 17:36:37.749" level="INFO">ssh admin@20.20.90.12
admin@20.20.90.12's password: 

             .---.,
            (      ``.
       _     \        )    __      ________ _____   _____
      (  `.   \      /     \ \    / /  ____|  __ \ / ____|  /\
       \    `. )    /       \ \  / /| |__  | |__) | (___   /  \
        \     |    /         \ \/ / |  __| |  _  / \___ \ / /\ \
         \    |   /           \  /  | |____| | \ \ ____) / ____ \
          \   |  /             \/   |______|_|  \_\_____/_/    \_\
           \  | /
            \_|/                     ___ _    _____  ___   ___  _ ___
                                    | __| |  | __\ \/ | \ / / \| | __|
                                    | _|| |__| _| &gt;  &lt; \ V /| .` | _|
                                    |_| |____|___/_/\_\ \_/ |_|\_|_|


Versa FlexVNF software
Release     :	16.1R2 (S9)
Release date:	20190628
Package ID  :	80561de	

Last login: Mon Mar 23 11:42:27 2020 from 10.92.116.67
admin@CPE12-HKG-HYBRD-IPC00190:~$ 
doing redispatch
set idle-timeout 0
[ok][2020-03-23 11:57:22]
admin@CPE12-HKG-HYBRD-IPC00190-cli&gt;</msg>
<status status="PASS" endtime="20200323 17:36:37.749" starttime="20200323 17:36:07.783"></status>
</kw>
<kw name="Connect And Reserve Ports" library="spirent1">
<msg timestamp="20200323 17:36:52.091" level="INFO">reserved ports 10/1 : port1 : port_handle[0]

 reserved ports 10/2 : port2 : port_handle[1]
***** run sth.interface_config successfully
***** run sth.interface_config successfully</msg>
<status status="PASS" endtime="20200323 17:36:52.092" starttime="20200323 17:36:37.750"></status>
</kw>
<kw name="Get Device Info" library="CPE1">
<assign>
<var>${CPE1_dev_info_on_vd}</var>
</assign>
<msg timestamp="20200323 17:36:52.932" level="INFO">${CPE1_dev_info_on_vd} = {'ownerOrg': u'IPC00190', 'name': u'CPE11-HKG-HYBRD-IPC00190', 'ipAddress': u'20.20.90.11', 'packageName': u'versa-flexvnf-20190628-153930-80561de-16.1R2S9-wsm', 'ping_status': u'REACHABLE', 'controll...</msg>
<status status="PASS" endtime="20200323 17:36:52.932" starttime="20200323 17:36:52.092"></status>
</kw>
<kw name="Get Data Dict" library="CPE1">
<assign>
<var>${CPE1}</var>
</assign>
<msg timestamp="20200323 17:36:52.962" level="INFO">${CPE1} = {'username': 'admin', 'main_logger': &lt;logging.Logger object at 0x7f310646c9d0&gt;, 'ctlr_dict': {'MYS': ['NV-WC01-N7-MYS', 'NV-WC02-N7-MYS'], 'LON': ['NV-WC01-N5-LON', 'NV-WC02-N5-LON'], 'HKG': ['NV-WC01...</msg>
<status status="PASS" endtime="20200323 17:36:52.962" starttime="20200323 17:36:52.932"></status>
</kw>
<kw name="Get Data Dict" library="CPE2">
<assign>
<var>${CPE2}</var>
</assign>
<msg timestamp="20200323 17:36:52.992" level="INFO">${CPE2} = {'username': 'admin', 'main_logger': &lt;logging.Logger object at 0x7f310639fd10&gt;, 'ctlr_dict': {'MYS': ['NV-WC01-N7-MYS', 'NV-WC02-N7-MYS'], 'LON': ['NV-WC01-N5-LON', 'NV-WC02-N5-LON'], 'HKG': ['NV-WC01...</msg>
<status status="PASS" endtime="20200323 17:36:52.992" starttime="20200323 17:36:52.963"></status>
</kw>
<kw name="Create Controller List" library="CPE1">
<arguments>
<arg>${CPE1['ORG_NAME']}</arg>
<arg>${CPE1['ORG_ID']}</arg>
<arg>${CPE1['NO_OF_VRFS']}</arg>
<arg>${CPE1['NODE']}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:36:53.014" starttime="20200323 17:36:52.993"></status>
</kw>
<kw name="Create Gateway List" library="CPE1">
<arguments>
<arg>${CPE1['ORG_NAME']}</arg>
<arg>${CPE1['ORG_ID']}</arg>
<arg>${CPE1['NO_OF_VRFS']}</arg>
<arg>${CPE1['NODE']}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:36:53.031" starttime="20200323 17:36:53.014"></status>
</kw>
<kw name="Create Cpe Data" library="CPE1">
<status status="PASS" endtime="20200323 17:36:53.033" starttime="20200323 17:36:53.032"></status>
</kw>
<kw name="Create Controller List" library="CPE2">
<arguments>
<arg>${CPE2['ORG_NAME']}</arg>
<arg>${CPE2['ORG_ID']}</arg>
<arg>${CPE2['NO_OF_VRFS']}</arg>
<arg>${CPE2['NODE']}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:36:53.111" starttime="20200323 17:36:53.034"></status>
</kw>
<kw name="Create Gateway List" library="CPE2">
<arguments>
<arg>${CPE2['ORG_NAME']}</arg>
<arg>${CPE2['ORG_ID']}</arg>
<arg>${CPE2['NO_OF_VRFS']}</arg>
<arg>${CPE2['NODE']}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:36:53.122" starttime="20200323 17:36:53.111"></status>
</kw>
<kw name="Create Cpe Data" library="CPE2">
<status status="PASS" endtime="20200323 17:36:53.123" starttime="20200323 17:36:53.122"></status>
</kw>
<kw name="Get Data Dict" library="CPE1">
<assign>
<var>${CPE1}</var>
</assign>
<msg timestamp="20200323 17:36:53.138" level="INFO">${CPE1} = {'gw_list': ['NV-GW01-N1-HKG', 'NV-GW02-N1-HKG'], 'dev_dict': {'ownerOrg': u'IPC00190', 'name': u'CPE11-HKG-HYBRD-IPC00190', 'ipAddress': u'20.20.90.11', 'packageName': u'versa-flexvnf-20190628-153930...</msg>
<status status="PASS" endtime="20200323 17:36:53.138" starttime="20200323 17:36:53.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${CPE1}</arg>
</arguments>
<msg timestamp="20200323 17:36:53.168" level="INFO">${CPE1} = {'gw_list': ['NV-GW01-N1-HKG', 'NV-GW02-N1-HKG'], 'dev_dict': {'ownerOrg': u'IPC00190', 'name': u'CPE11-HKG-HYBRD-IPC00190', 'ipAddress': u'20.20.90.11', 'packageName': u'versa-flexvnf-20190628-153930...</msg>
<status status="PASS" endtime="20200323 17:36:53.168" starttime="20200323 17:36:53.138"></status>
</kw>
<kw name="Get Data Dict" library="CPE2">
<assign>
<var>${CPE2}</var>
</assign>
<msg timestamp="20200323 17:36:53.184" level="INFO">${CPE2} = {'gw_list': ['NV-GW01-N1-HKG', 'NV-GW02-N1-HKG'], 'START_LAN_IP_SUBNET': '192.169.111.0/24', 'PST_CREATION': 'NO', 'WAN2_INTF_NEXTHOP': '172.16.6.45', 'lan_vlan': [610], 'WC2_local_ike_key': 'CPE12-HK...</msg>
<status status="PASS" endtime="20200323 17:36:53.184" starttime="20200323 17:36:53.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${CPE2}</arg>
</arguments>
<msg timestamp="20200323 17:36:53.237" level="INFO">${CPE2} = {'gw_list': ['NV-GW01-N1-HKG', 'NV-GW02-N1-HKG'], 'START_LAN_IP_SUBNET': '192.169.111.0/24', 'PST_CREATION': 'NO', 'WAN2_INTF_NEXTHOP': '172.16.6.45', 'lan_vlan': [610], 'WC2_local_ike_key': 'CPE12-HK...</msg>
<status status="PASS" endtime="20200323 17:36:53.238" starttime="20200323 17:36:53.184"></status>
</kw>
<kw name="VM Pre Op" library="VM1">
<msg timestamp="20200323 17:37:01.864" level="INFO">&lt;netmiko.linux.linux_ssh.LinuxSSH object at 0x7f3105d60e90&gt;
[sudo] password for sathish: 
1:~# 
exit
linux: sathish@VM1:~$</msg>
<status status="PASS" endtime="20200323 17:37:01.864" starttime="20200323 17:36:53.238"></status>
</kw>
<kw name="VM Pre Op" library="VM2">
<msg timestamp="20200323 17:37:10.544" level="INFO">&lt;netmiko.linux.linux_ssh.LinuxSSH object at 0x7f31052b1450&gt;
[sudo] password for sathish: 
E12-VM1:~# 
exit
linux: sathish@CPE12-VM1:~$</msg>
<status status="PASS" endtime="20200323 17:37:10.544" starttime="20200323 17:37:01.864"></status>
</kw>
<kw name="Get Data Dict" library="VM1">
<assign>
<var>${VM1}</var>
</assign>
<msg timestamp="20200323 17:37:10.560" level="INFO">${VM1} = {'username': 'sathish', 'shell_nc': &lt;netmiko.linux.linux_ssh.LinuxSSH object at 0x7f3105d60e90&gt;, 'lan': {1: {'second_host': '192.169.101.2', 'vlan': 600, 'netmask': '255.255.255.0', 'first_host': '192...</msg>
<status status="PASS" endtime="20200323 17:37:10.560" starttime="20200323 17:37:10.544"></status>
</kw>
<kw name="Get Data Dict" library="VM2">
<assign>
<var>${VM2}</var>
</assign>
<msg timestamp="20200323 17:37:10.578" level="INFO">${VM2} = {'username': 'sathish', 'shell_nc': &lt;netmiko.linux.linux_ssh.LinuxSSH object at 0x7f31052b1450&gt;, 'lan': {1: {'second_host': '192.169.111.2', 'vlan': 610, 'netmask': '255.255.255.0', 'first_host': '192...</msg>
<status status="PASS" endtime="20200323 17:37:10.578" starttime="20200323 17:37:10.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${VM1}</arg>
</arguments>
<msg timestamp="20200323 17:37:10.602" level="INFO">${VM1} = {'username': 'sathish', 'shell_nc': &lt;netmiko.linux.linux_ssh.LinuxSSH object at 0x7f3105d60e90&gt;, 'lan': {1: {'second_host': '192.169.101.2', 'vlan': 600, 'netmask': '255.255.255.0', 'first_host': '192...</msg>
<status status="PASS" endtime="20200323 17:37:10.602" starttime="20200323 17:37:10.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${VM2}</arg>
</arguments>
<msg timestamp="20200323 17:37:10.628" level="INFO">${VM2} = {'username': 'sathish', 'shell_nc': &lt;netmiko.linux.linux_ssh.LinuxSSH object at 0x7f31052b1450&gt;, 'lan': {1: {'second_host': '192.169.111.2', 'vlan': 610, 'netmask': '255.255.255.0', 'first_host': '192...</msg>
<status status="PASS" endtime="20200323 17:37:10.629" starttime="20200323 17:37:10.602"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ 1 | ${VM1['NO_OF_VRFS']} + 1 ]">
<kw type="foritem" name="${i} = 1">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM1['lan'][${i}]['first_host']}</arg>
</arguments>
<assign>
<var>${gw}</var>
</assign>
<msg timestamp="20200323 17:37:10.631" level="INFO">${gw} = 192.169.101.1</msg>
<status status="PASS" endtime="20200323 17:37:10.631" starttime="20200323 17:37:10.630"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM1['lan'][${i}]['vlan']}</arg>
</arguments>
<assign>
<var>${vlan}</var>
</assign>
<msg timestamp="20200323 17:37:10.632" level="INFO">${vlan} = 600</msg>
<status status="PASS" endtime="20200323 17:37:10.632" starttime="20200323 17:37:10.631"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM2['lan'][${i}]['nw']}</arg>
</arguments>
<assign>
<var>${destination_nw}</var>
</assign>
<msg timestamp="20200323 17:37:10.634" level="INFO">${destination_nw} = 192.169.111.0/24</msg>
<status status="PASS" endtime="20200323 17:37:10.634" starttime="20200323 17:37:10.633"></status>
</kw>
<kw name="Send Commands And Expect" library="VM1">
<arguments>
<arg>sudo ip route add ${destination_nw} via ${gw} dev ${VM1['LAN_INTF']}.${vlan}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:37:11.036" starttime="20200323 17:37:10.634"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:11.037" starttime="20200323 17:37:10.629"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:11.037" starttime="20200323 17:37:10.629"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ 1 | ${VM2['NO_OF_VRFS']} + 1 ]">
<kw type="foritem" name="${i} = 1">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM2['lan'][${i}]['first_host']}</arg>
</arguments>
<assign>
<var>${gw}</var>
</assign>
<msg timestamp="20200323 17:37:11.039" level="INFO">${gw} = 192.169.111.1</msg>
<status status="PASS" endtime="20200323 17:37:11.039" starttime="20200323 17:37:11.038"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM2['lan'][${i}]['vlan']}</arg>
</arguments>
<assign>
<var>${vlan}</var>
</assign>
<msg timestamp="20200323 17:37:11.040" level="INFO">${vlan} = 610</msg>
<status status="PASS" endtime="20200323 17:37:11.040" starttime="20200323 17:37:11.039"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM1['lan'][${i}]['nw']}</arg>
</arguments>
<assign>
<var>${destination_nw}</var>
</assign>
<msg timestamp="20200323 17:37:11.042" level="INFO">${destination_nw} = 192.169.101.0/24</msg>
<status status="PASS" endtime="20200323 17:37:11.042" starttime="20200323 17:37:11.041"></status>
</kw>
<kw name="Send Commands And Expect" library="VM2">
<arguments>
<arg>sudo ip route add ${destination_nw} via ${gw} dev ${VM2['LAN_INTF']}.${vlan}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:37:11.449" starttime="20200323 17:37:11.042"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:11.449" starttime="20200323 17:37:11.037"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:11.449" starttime="20200323 17:37:11.037"></status>
</kw>
<kw name="SPIRENT_STARTUP">
<kw name="Create Device" library="spirent1">
<arguments>
<arg>port=0</arg>
<arg>vlanid=${CPE1['lan'][1]['vlan']}</arg>
<arg>intf_ip_addr=${CPE1['lan'][1]['third_host']}</arg>
<arg>gateway_ip_addr=${CPE1['lan'][1]['first_host']}</arg>
</arguments>
<assign>
<var>${device1}</var>
</assign>
<msg timestamp="20200323 17:37:11.822" level="INFO">***** run sth.emulation_device_config successfully</msg>
<msg timestamp="20200323 17:37:11.823" level="INFO">${device1} = {'status': '1', 'handle': 'host1', 'intf_ip_addr': '192.169.101.1', 'vlanid': 600, 'gateway_ip_addr': '192.169.101.1', 'port': 'port1'}</msg>
<status status="PASS" endtime="20200323 17:37:11.823" starttime="20200323 17:37:11.451"></status>
</kw>
<kw name="Create Device" library="spirent1">
<arguments>
<arg>port=1</arg>
<arg>vlanid=${CPE2['lan'][1]['vlan']}</arg>
<arg>intf_ip_addr=${CPE2['lan'][1]['third_host']}</arg>
<arg>gateway_ip_addr=${CPE2['lan'][1]['first_host']}</arg>
</arguments>
<assign>
<var>${device2}</var>
</assign>
<msg timestamp="20200323 17:37:11.860" level="INFO">***** run sth.emulation_device_config successfully</msg>
<msg timestamp="20200323 17:37:11.860" level="INFO">${device2} = {'status': '1', 'handle': 'host2', 'intf_ip_addr': '192.169.111.1', 'vlanid': 610, 'gateway_ip_addr': '192.169.111.1', 'port': 'port2'}</msg>
<status status="PASS" endtime="20200323 17:37:11.860" starttime="20200323 17:37:11.823"></status>
</kw>
<kw name="Create Tcp Stream Block" library="spirent1">
<arguments>
<arg>${device1}</arg>
<arg>${device2}</arg>
<arg>src_port=2000</arg>
<arg>rate_mbps=2</arg>
</arguments>
<assign>
<var>${stream1}</var>
</assign>
<msg timestamp="20200323 17:37:13.765" level="INFO">***** run sth.traffic_config successfully</msg>
<msg timestamp="20200323 17:37:13.765" level="INFO">${stream1} = {'status': '1', 'stream_id': 'streamblock1'}</msg>
<status status="PASS" endtime="20200323 17:37:13.765" starttime="20200323 17:37:11.861"></status>
</kw>
<kw name="Create Tcp Stream Block" library="spirent1">
<arguments>
<arg>${device1}</arg>
<arg>${device2}</arg>
<arg>src_port=2001</arg>
<arg>rate_mbps=2</arg>
</arguments>
<assign>
<var>${stream2}</var>
</assign>
<msg timestamp="20200323 17:37:14.254" level="INFO">***** run sth.traffic_config successfully</msg>
<msg timestamp="20200323 17:37:14.255" level="INFO">${stream2} = {'status': '1', 'stream_id': 'streamblock2'}</msg>
<status status="PASS" endtime="20200323 17:37:14.255" starttime="20200323 17:37:13.766"></status>
</kw>
<kw name="Create Udp Stream Block" library="spirent1">
<arguments>
<arg>${device1}</arg>
<arg>${device2}</arg>
<arg>src_port=2002</arg>
<arg>rate_mbps=2</arg>
</arguments>
<assign>
<var>${stream3}</var>
</assign>
<msg timestamp="20200323 17:37:14.730" level="INFO">***** run sth.traffic_config successfully</msg>
<msg timestamp="20200323 17:37:14.730" level="INFO">${stream3} = {'status': '1', 'stream_id': 'streamblock3'}</msg>
<status status="PASS" endtime="20200323 17:37:14.730" starttime="20200323 17:37:14.255"></status>
</kw>
<kw name="Create Tcp Stream Block" library="spirent1">
<arguments>
<arg>${device1}</arg>
<arg>${device2}</arg>
<arg>src_port=3001</arg>
<arg>rate_mbps=1</arg>
<arg>ip_dscp=46</arg>
</arguments>
<assign>
<var>${premium_tcp_stream1}</var>
</assign>
<msg timestamp="20200323 17:37:15.195" level="INFO">***** run sth.traffic_config successfully</msg>
<msg timestamp="20200323 17:37:15.196" level="INFO">${premium_tcp_stream1} = {'status': '1', 'stream_id': 'streamblock4'}</msg>
<status status="PASS" endtime="20200323 17:37:15.196" starttime="20200323 17:37:14.731"></status>
</kw>
<kw name="Create Tcp Stream Block" library="spirent1">
<arguments>
<arg>${device1}</arg>
<arg>${device2}</arg>
<arg>src_port=3002</arg>
<arg>rate_mbps=1</arg>
<arg>ip_dscp=26</arg>
</arguments>
<assign>
<var>${business1_tcp_stream1}</var>
</assign>
<msg timestamp="20200323 17:37:15.681" level="INFO">***** run sth.traffic_config successfully</msg>
<msg timestamp="20200323 17:37:15.681" level="INFO">${business1_tcp_stream1} = {'status': '1', 'stream_id': 'streamblock5'}</msg>
<status status="PASS" endtime="20200323 17:37:15.681" starttime="20200323 17:37:15.196"></status>
</kw>
<kw name="Create Tcp Stream Block" library="spirent1">
<arguments>
<arg>${device1}</arg>
<arg>${device2}</arg>
<arg>src_port=3003</arg>
<arg>rate_mbps=1</arg>
<arg>ip_dscp=18</arg>
</arguments>
<assign>
<var>${business2_tcp_stream1}</var>
</assign>
<msg timestamp="20200323 17:37:16.182" level="INFO">***** run sth.traffic_config successfully</msg>
<msg timestamp="20200323 17:37:16.183" level="INFO">${business2_tcp_stream1} = {'status': '1', 'stream_id': 'streamblock6'}</msg>
<status status="PASS" endtime="20200323 17:37:16.183" starttime="20200323 17:37:15.681"></status>
</kw>
<kw name="Create Tcp Stream Block" library="spirent1">
<arguments>
<arg>${device1}</arg>
<arg>${device2}</arg>
<arg>src_port=3004</arg>
<arg>rate_mbps=1</arg>
<arg>ip_dscp=10</arg>
</arguments>
<assign>
<var>${business3_tcp_stream1}</var>
</assign>
<msg timestamp="20200323 17:37:16.547" level="INFO">***** run sth.traffic_config successfully</msg>
<msg timestamp="20200323 17:37:16.547" level="INFO">${business3_tcp_stream1} = {'status': '1', 'stream_id': 'streamblock7'}</msg>
<status status="PASS" endtime="20200323 17:37:16.547" starttime="20200323 17:37:16.183"></status>
</kw>
<kw name="Create Tcp Stream Block" library="spirent1">
<arguments>
<arg>${device1}</arg>
<arg>${device2}</arg>
<arg>src_port=5000</arg>
<arg>rate_mbps=1</arg>
</arguments>
<assign>
<var>${internet_default_tcp_stream1}</var>
</assign>
<msg timestamp="20200323 17:37:16.952" level="INFO">***** run sth.traffic_config successfully</msg>
<msg timestamp="20200323 17:37:16.953" level="INFO">${internet_default_tcp_stream1} = {'status': '1', 'stream_id': 'streamblock8'}</msg>
<status status="PASS" endtime="20200323 17:37:16.953" starttime="20200323 17:37:16.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${device1}</arg>
</arguments>
<msg timestamp="20200323 17:37:16.954" level="INFO">${device1} = {'status': '1', 'handle': 'host1', 'intf_ip_addr': '192.169.101.1', 'vlanid': 600, 'gateway_ip_addr': '192.169.101.1', 'port': 'port1'}</msg>
<status status="PASS" endtime="20200323 17:37:16.954" starttime="20200323 17:37:16.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${device2}</arg>
</arguments>
<msg timestamp="20200323 17:37:16.955" level="INFO">${device2} = {'status': '1', 'handle': 'host2', 'intf_ip_addr': '192.169.111.1', 'vlanid': 610, 'gateway_ip_addr': '192.169.111.1', 'port': 'port2'}</msg>
<status status="PASS" endtime="20200323 17:37:16.955" starttime="20200323 17:37:16.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${stream1}</arg>
</arguments>
<msg timestamp="20200323 17:37:16.957" level="INFO">${stream1} = {'status': '1', 'stream_id': 'streamblock1'}</msg>
<status status="PASS" endtime="20200323 17:37:16.957" starttime="20200323 17:37:16.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${stream2}</arg>
</arguments>
<msg timestamp="20200323 17:37:16.959" level="INFO">${stream2} = {'status': '1', 'stream_id': 'streamblock2'}</msg>
<status status="PASS" endtime="20200323 17:37:16.959" starttime="20200323 17:37:16.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${stream3}</arg>
</arguments>
<msg timestamp="20200323 17:37:16.960" level="INFO">${stream3} = {'status': '1', 'stream_id': 'streamblock3'}</msg>
<status status="PASS" endtime="20200323 17:37:16.961" starttime="20200323 17:37:16.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${premium_tcp_stream1}</arg>
</arguments>
<msg timestamp="20200323 17:37:16.962" level="INFO">${premium_tcp_stream1} = {'status': '1', 'stream_id': 'streamblock4'}</msg>
<status status="PASS" endtime="20200323 17:37:16.962" starttime="20200323 17:37:16.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${business1_tcp_stream1}</arg>
</arguments>
<msg timestamp="20200323 17:37:16.963" level="INFO">${business1_tcp_stream1} = {'status': '1', 'stream_id': 'streamblock5'}</msg>
<status status="PASS" endtime="20200323 17:37:16.963" starttime="20200323 17:37:16.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${business2_tcp_stream1}</arg>
</arguments>
<msg timestamp="20200323 17:37:16.964" level="INFO">${business2_tcp_stream1} = {'status': '1', 'stream_id': 'streamblock6'}</msg>
<status status="PASS" endtime="20200323 17:37:16.964" starttime="20200323 17:37:16.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${business3_tcp_stream1}</arg>
</arguments>
<msg timestamp="20200323 17:37:16.965" level="INFO">${business3_tcp_stream1} = {'status': '1', 'stream_id': 'streamblock7'}</msg>
<status status="PASS" endtime="20200323 17:37:16.966" starttime="20200323 17:37:16.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${internet_default_tcp_stream1}</arg>
</arguments>
<msg timestamp="20200323 17:37:16.967" level="INFO">${internet_default_tcp_stream1} = {'status': '1', 'stream_id': 'streamblock8'}</msg>
<status status="PASS" endtime="20200323 17:37:16.967" starttime="20200323 17:37:16.966"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:16.967" starttime="20200323 17:37:11.450"></status>
</kw>
<kw name="CREATE FWD PROFILE">
<kw name="Get Vni Interface Bw" library="CPE1">
<arguments>
<arg>${CPE1['WAN1_INTF']}</arg>
</arguments>
<assign>
<var>${curr_intf_bw}</var>
</assign>
<msg timestamp="20200323 17:37:18.150" level="INFO">${curr_intf_bw} = {u'bandwidth': {u'downlink': 30000, u'uplink': 30000}}</msg>
<status status="PASS" endtime="20200323 17:37:18.150" starttime="20200323 17:37:16.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${curr_intf_bw}</arg>
</arguments>
<msg timestamp="20200323 17:37:18.152" level="INFO">${curr_intf_bw} = {u'bandwidth': {u'downlink': 30000, u'uplink': 30000}}</msg>
<status status="PASS" endtime="20200323 17:37:18.152" starttime="20200323 17:37:18.151"></status>
</kw>
<kw name="Modify Interface Bandwidth" library="CPE1">
<arguments>
<arg>${CPE1['WAN1_INTF']}</arg>
<arg>${bw}</arg>
<arg>${bw}</arg>
</arguments>
<msg timestamp="20200323 17:37:19.228" level="INFO">{"bandwidth": {"downlink": "30000", "uplink": "30000"}}

&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20200323 17:37:19.229" starttime="20200323 17:37:18.153"></status>
</kw>
<kw name="Get Vni Interface Bw" library="CPE1">
<arguments>
<arg>${CPE1['WAN1_INTF']}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:37:19.526" starttime="20200323 17:37:19.229"></status>
</kw>
<kw name="Create Sla Profile" library="CPE1">
<arguments>
<arg>${sla_prf_1}</arg>
<arg>circuit_transmit_utilization=5</arg>
</arguments>
<msg timestamp="20200323 17:37:19.528" level="INFO">
CREATE SLA profile
</msg>
<msg timestamp="20200323 17:37:20.632" level="INFO">
PASS</msg>
<msg timestamp="20200323 17:37:20.633" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; CREATE SLA Profile PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20200323 17:37:20.633" level="INFO">{
	"sla-profile": {
		"name": "SLA112"
		,"circuit-transmit-utilization": "5"
	}
}</msg>
<status status="PASS" endtime="20200323 17:37:20.634" starttime="20200323 17:37:19.526"></status>
</kw>
<kw name="Create Fowarding Profile" library="CPE1">
<arguments>
<arg>${fwp_1}</arg>
<arg>${CPE1['WAN1_NAME']}</arg>
<arg>${CPE1['WAN2_NAME']}</arg>
<arg>sla_name=${sla_prf_1}</arg>
<arg>evaluate_continuously=disable</arg>
</arguments>
<msg timestamp="20200323 17:37:20.636" level="INFO">
CREATE FWD PROFILE
</msg>
<msg timestamp="20200323 17:37:21.792" level="INFO">
PASS</msg>
<msg timestamp="20200323 17:37:21.792" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; FORWARDING PROFILE CREATION PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<status status="PASS" endtime="20200323 17:37:21.792" starttime="20200323 17:37:20.634"></status>
</kw>
<kw name="Create Address Object" library="CPE1">
<arguments>
<arg>${ipaddobj_1}</arg>
<arg>ipv4-prefix</arg>
<arg>${CPE1['lan'][1]['third_host']}/32</arg>
</arguments>
<msg timestamp="20200323 17:37:21.794" level="INFO">
CREATE IPaddress Object
</msg>
<msg timestamp="20200323 17:37:22.815" level="INFO">
PASS</msg>
<msg timestamp="20200323 17:37:22.815" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; ADDRESS OBJECT CREATION PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20200323 17:37:22.816" level="INFO">{
	"address": {
		"name": "src_ip_add_obj11",
		"ipv4-prefix": "192.169.101.3/32"
	}
}</msg>
<status status="PASS" endtime="20200323 17:37:22.816" starttime="20200323 17:37:21.793"></status>
</kw>
<kw name="Create Address Object" library="CPE1">
<arguments>
<arg>${ipaddobj_2}</arg>
<arg>ipv4-prefix</arg>
<arg>${CPE2['lan'][1]['third_host']}/32</arg>
</arguments>
<msg timestamp="20200323 17:37:22.817" level="INFO">
CREATE IPaddress Object
</msg>
<msg timestamp="20200323 17:37:23.833" level="INFO">
PASS</msg>
<msg timestamp="20200323 17:37:23.834" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; ADDRESS OBJECT CREATION PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20200323 17:37:23.834" level="INFO">{
	"address": {
		"name": "dst_ip_add_obj11",
		"ipv4-prefix": "192.169.111.3/32"
	}
}</msg>
<status status="PASS" endtime="20200323 17:37:23.834" starttime="20200323 17:37:22.816"></status>
</kw>
<kw name="Create Service Object" library="CPE1">
<arguments>
<arg>${serviceobj_1}</arg>
<arg>${TCP}</arg>
<arg>source_port=2000</arg>
</arguments>
<msg timestamp="20200323 17:37:23.835" level="INFO">
CREATE Service Object
</msg>
<msg timestamp="20200323 17:37:24.834" level="INFO">
PASS</msg>
<msg timestamp="20200323 17:37:24.834" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Service OBJECT CREATION PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20200323 17:37:24.835" level="INFO">{
	"service": {
		"name": "src_port_2000",
		"protocol": "TCP",
		"source-port": "2000"
	}
}</msg>
<status status="PASS" endtime="20200323 17:37:24.835" starttime="20200323 17:37:23.835"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:24.835" starttime="20200323 17:37:16.967"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:24.835" starttime="20200323 17:35:28.107"></status>
</kw>
<test id="s1-t1" name="NV_SINGLE_CPE_HYBRID_SANITY_01">
<kw name="CHECK MPLS WAN INTERFACE UP in CPE1 &amp; CPE2">
<kw name="Get Interface Status" library="CPE1">
<arguments>
<arg>intf_name=${CPE1['WAN1_INTF']}${unit_o} | match MPLS</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:37:26.043" level="INFO">${result} = show interfaces brief | tab | match vni-0/1.0 | match MPLS
vni-0/1.0    00:0b:ab:f1:9a:5a  up    up     2       MPLS-WAN-Transport-VR  172.16.7.42/30    
[ok][2020-03-23 11:56:42]
admin@CPE11-HKG-HYBR...</msg>
<status status="PASS" endtime="20200323 17:37:26.043" starttime="20200323 17:37:24.838"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Contain X Times</arg>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
<arg>up not presnt 2 times</arg>
</arguments>
<kw name="Should Contain X Times" library="BuiltIn">
<doc>Fails if ``item1`` does not contain ``item2`` ``count`` times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
<arg>up not presnt 2 times</arg>
</arguments>
<msg timestamp="20200323 17:37:26.045" level="INFO">Item found from the first item 2 times</msg>
<status status="PASS" endtime="20200323 17:37:26.046" starttime="20200323 17:37:26.044"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:26.046" starttime="20200323 17:37:26.044"></status>
</kw>
<kw name="Get Interface Status" library="CPE2">
<arguments>
<arg>intf_name=${CPE2['WAN1_INTF']}${unit_o} | match MPLS</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:37:27.250" level="INFO">${result} = show interfaces brief | tab | match vni-0/1.0 | match MPLS
vni-0/1.0    00:0b:ab:f4:4f:60  up    up     2       MPLS-WAN-Transport-VR  172.16.7.46/30    
[ok][2020-03-23 11:58:12]
admin@CPE12-HKG-HYBR...</msg>
<status status="PASS" endtime="20200323 17:37:27.250" starttime="20200323 17:37:26.046"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Contain X Times</arg>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
</arguments>
<kw name="Should Contain X Times" library="BuiltIn">
<doc>Fails if ``item1`` does not contain ``item2`` ``count`` times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20200323 17:37:27.252" level="INFO">Item found from the first item 2 times</msg>
<status status="PASS" endtime="20200323 17:37:27.253" starttime="20200323 17:37:27.252"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:27.253" starttime="20200323 17:37:27.251"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:27.253" starttime="20200323 17:37:24.837"></status>
</kw>
<kw name="CHECK INTERNET WAN INTERFACE UP in CPE1 &amp; CPE2">
<kw name="Get Interface Status" library="CPE1">
<arguments>
<arg>intf_name=${CPE1['WAN2_INTF']}${unit_o} | match INT</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:37:29.060" level="INFO">${result} = show interfaces brief | tab | match vni-0/2.0 | match INT
vni-0/2.0    00:0b:ab:f1:9a:5b  up    up     2       INT-WAN-Transport-VR   172.16.6.42/30    
[ok][2020-03-23 11:56:45]
admin@CPE11-HKG-HYBRD...</msg>
<status status="PASS" endtime="20200323 17:37:29.060" starttime="20200323 17:37:27.254"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Contain X Times</arg>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
</arguments>
<kw name="Should Contain X Times" library="BuiltIn">
<doc>Fails if ``item1`` does not contain ``item2`` ``count`` times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20200323 17:37:29.062" level="INFO">Item found from the first item 2 times</msg>
<status status="PASS" endtime="20200323 17:37:29.062" starttime="20200323 17:37:29.061"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:29.062" starttime="20200323 17:37:29.061"></status>
</kw>
<kw name="Get Interface Status" library="CPE2">
<arguments>
<arg>intf_name=${CPE2['WAN2_INTF']}${unit_o} | match INT</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:37:30.068" level="INFO">${result} = show interfaces brief | tab | match vni-0/2.0 | match INT
vni-0/2.0    00:0b:ab:f4:4f:61  up    up     2       INT-WAN-Transport-VR   172.16.6.46/30    
[ok][2020-03-23 11:58:15]
admin@CPE12-HKG-HYBRD...</msg>
<status status="PASS" endtime="20200323 17:37:30.068" starttime="20200323 17:37:29.063"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Contain X Times</arg>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
</arguments>
<kw name="Should Contain X Times" library="BuiltIn">
<doc>Fails if ``item1`` does not contain ``item2`` ``count`` times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20200323 17:37:30.070" level="INFO">Item found from the first item 2 times</msg>
<status status="PASS" endtime="20200323 17:37:30.070" starttime="20200323 17:37:30.069"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:30.070" starttime="20200323 17:37:30.068"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:30.070" starttime="20200323 17:37:27.253"></status>
</kw>
<kw name="CHECK WC1 PTVI INTERFACE STATUS in CPE1">
<kw name="Get Interface Status" library="CPE1">
<arguments>
<arg>intf_name=${CPE1['ptvi_intf_wc1']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:37:31.075" level="INFO">${result} = show interfaces brief | tab | match ptvi180
ptvi180      n/a                up    up     2       IPC00190-Control-VR    10.90.64.1/32     
[ok][2020-03-23 11:56:47]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt;...</msg>
<status status="PASS" endtime="20200323 17:37:31.076" starttime="20200323 17:37:30.072"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Contain X Times</arg>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
</arguments>
<kw name="Should Contain X Times" library="BuiltIn">
<doc>Fails if ``item1`` does not contain ``item2`` ``count`` times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20200323 17:37:31.077" level="INFO">Item found from the first item 2 times</msg>
<status status="PASS" endtime="20200323 17:37:31.078" starttime="20200323 17:37:31.077"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:31.078" starttime="20200323 17:37:31.076"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:31.078" starttime="20200323 17:37:30.071"></status>
</kw>
<kw name="CHECK WC2 PTVI INTERFACE STATUS in CPE2">
<kw name="Get Interface Status" library="CPE2">
<arguments>
<arg>intf_name=${CPE2['ptvi_intf_wc2']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:37:31.883" level="INFO">${result} = show interfaces brief | tab | match ptvi181
ptvi181      n/a                up    up     2       IPC00190-Control-VR    10.90.64.11/32    
[ok][2020-03-23 11:58:16]
admin@CPE12-HKG-HYBRD-IPC00190-cli&gt;...</msg>
<status status="PASS" endtime="20200323 17:37:31.883" starttime="20200323 17:37:31.079"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Contain X Times</arg>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
</arguments>
<kw name="Should Contain X Times" library="BuiltIn">
<doc>Fails if ``item1`` does not contain ``item2`` ``count`` times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20200323 17:37:31.885" level="INFO">Item found from the first item 2 times</msg>
<status status="PASS" endtime="20200323 17:37:31.885" starttime="20200323 17:37:31.884"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:31.885" starttime="20200323 17:37:31.883"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:31.885" starttime="20200323 17:37:31.079"></status>
</kw>
<kw name="CHECK WC1 PTVI INTERFACE STATUS in CPE1">
<kw name="Get Interface Status" library="CPE1">
<arguments>
<arg>intf_name=${CPE1['ptvi_intf_wc1']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:37:32.891" level="INFO">${result} = show interfaces brief | tab | match ptvi180
ptvi180      n/a                up    up     2       IPC00190-Control-VR    10.90.64.1/32     
[ok][2020-03-23 11:56:49]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt;...</msg>
<status status="PASS" endtime="20200323 17:37:32.891" starttime="20200323 17:37:31.886"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Contain X Times</arg>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
</arguments>
<kw name="Should Contain X Times" library="BuiltIn">
<doc>Fails if ``item1`` does not contain ``item2`` ``count`` times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20200323 17:37:32.893" level="INFO">Item found from the first item 2 times</msg>
<status status="PASS" endtime="20200323 17:37:32.893" starttime="20200323 17:37:32.892"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:32.893" starttime="20200323 17:37:32.892"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:32.894" starttime="20200323 17:37:31.886"></status>
</kw>
<kw name="CHECK WC2 PTVI INTERFACE STATUS in CPE2">
<kw name="Get Interface Status" library="CPE2">
<arguments>
<arg>intf_name=${CPE2['ptvi_intf_wc2']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:37:33.900" level="INFO">${result} = show interfaces brief | tab | match ptvi181
ptvi181      n/a                up    up     2       IPC00190-Control-VR    10.90.64.11/32    
[ok][2020-03-23 11:58:18]
admin@CPE12-HKG-HYBRD-IPC00190-cli&gt;...</msg>
<status status="PASS" endtime="20200323 17:37:33.900" starttime="20200323 17:37:32.895"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Contain X Times</arg>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
</arguments>
<kw name="Should Contain X Times" library="BuiltIn">
<doc>Fails if ``item1`` does not contain ``item2`` ``count`` times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20200323 17:37:33.902" level="INFO">Item found from the first item 2 times</msg>
<status status="PASS" endtime="20200323 17:37:33.902" starttime="20200323 17:37:33.901"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:33.902" starttime="20200323 17:37:33.900"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:33.903" starttime="20200323 17:37:32.894"></status>
</kw>
<kw name="CHECK WC1 BGP NEIGHBOR STATUS in CPE1 &amp; CPE2">
<kw name="Get Bgp Nbr Status" library="CPE1">
<arguments>
<arg>nbr_ip=${CPE1['WC1_ESP_IP']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:37:35.108" level="INFO">${result} = show bgp neighbor org IPC00190 brief IPC00190-Control-VR | match 10.90.64.1
10.90.64.1      1w5d20h    Established     126           5      36163        179
10.90.64.11     1w5d20h    Established     ...</msg>
<status status="PASS" endtime="20200323 17:37:35.109" starttime="20200323 17:37:33.904"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=${est}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:37:35.111" level="INFO">show bgp neighbor org IPC00190 brief IPC00190-Control-VR | match 10.90.64.1
10.90.64.1      1w5d20h    Established     126           5      36163        179
10.90.64.11     1w5d20h    Established     125           5      35533        179
[ok][2020-03-23 11:56:51]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:37:35.111" starttime="20200323 17:37:35.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:37:35.112" level="INFO">Established</msg>
<status status="PASS" endtime="20200323 17:37:35.112" starttime="20200323 17:37:35.111"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:37:35.115" starttime="20200323 17:37:35.114"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:35.115" starttime="20200323 17:37:35.113"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:35.115" starttime="20200323 17:37:35.109"></status>
</kw>
<kw name="Get Bgp Nbr Status" library="CPE2">
<arguments>
<arg>nbr_ip=${CPE2['WC1_ESP_IP']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:37:36.920" level="INFO">${result} = show bgp neighbor org IPC00190 brief IPC00190-Control-VR | match 10.90.64.1
10.90.64.1      2w0d01h    Established     126           5      43648        179
10.90.64.11     2w0d01h    Established     ...</msg>
<status status="PASS" endtime="20200323 17:37:36.921" starttime="20200323 17:37:35.115"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=${est}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:37:36.923" level="INFO">show bgp neighbor org IPC00190 brief IPC00190-Control-VR | match 10.90.64.1
10.90.64.1      2w0d01h    Established     126           5      43648        179
10.90.64.11     2w0d01h    Established     125           5      42301        179
[ok][2020-03-23 11:58:21]
admin@CPE12-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:37:36.923" starttime="20200323 17:37:36.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:37:36.924" level="INFO">Established</msg>
<status status="PASS" endtime="20200323 17:37:36.924" starttime="20200323 17:37:36.923"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:37:36.925" starttime="20200323 17:37:36.925"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:36.925" starttime="20200323 17:37:36.924"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:36.926" starttime="20200323 17:37:36.921"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:36.926" starttime="20200323 17:37:33.903"></status>
</kw>
<kw name="CHECK WC2 BGP NEIGHBOR STATUS in CPE1 &amp; CPE2">
<kw name="Get Bgp Nbr Status" library="CPE1">
<arguments>
<arg>nbr_ip=${CPE1['WC2_ESP_IP']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:37:38.131" level="INFO">${result} = show bgp neighbor org IPC00190 brief IPC00190-Control-VR | match 10.90.64.11
10.90.64.11     1w5d20h    Established     125           5      35533        179
[ok][2020-03-23 11:56:54]
admin@CPE11-HKG-...</msg>
<status status="PASS" endtime="20200323 17:37:38.131" starttime="20200323 17:37:36.927"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=${est}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:37:38.133" level="INFO">show bgp neighbor org IPC00190 brief IPC00190-Control-VR | match 10.90.64.11
10.90.64.11     1w5d20h    Established     125           5      35533        179
[ok][2020-03-23 11:56:54]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:37:38.134" starttime="20200323 17:37:38.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:37:38.135" level="INFO">Established</msg>
<status status="PASS" endtime="20200323 17:37:38.135" starttime="20200323 17:37:38.134"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:37:38.137" starttime="20200323 17:37:38.136"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:38.137" starttime="20200323 17:37:38.135"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:38.137" starttime="20200323 17:37:38.131"></status>
</kw>
<kw name="Get Bgp Nbr Status" library="CPE2">
<arguments>
<arg>nbr_ip=${CPE2['WC2_ESP_IP']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:37:39.542" level="INFO">${result} = show bgp neighbor org IPC00190 brief IPC00190-Control-VR | match 10.90.64.11
10.90.64.11     2w0d01h    Established     125           5      42301        179
[ok][2020-03-23 11:58:24]
admin@CPE12-HKG-...</msg>
<status status="PASS" endtime="20200323 17:37:39.543" starttime="20200323 17:37:38.138"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=${est}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:37:39.545" level="INFO">show bgp neighbor org IPC00190 brief IPC00190-Control-VR | match 10.90.64.11
10.90.64.11     2w0d01h    Established     125           5      42301        179
[ok][2020-03-23 11:58:24]
admin@CPE12-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:37:39.545" starttime="20200323 17:37:39.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:37:39.546" level="INFO">Established</msg>
<status status="PASS" endtime="20200323 17:37:39.546" starttime="20200323 17:37:39.546"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:37:39.548" starttime="20200323 17:37:39.547"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:39.548" starttime="20200323 17:37:39.547"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:39.548" starttime="20200323 17:37:39.543"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:39.549" starttime="20200323 17:37:36.926"></status>
</kw>
<kw name="CHECK CPE2 LAN ROUTE Present in CPE1">
<kw name="Check Lan Route" library="CPE1">
<arguments>
<arg>lan=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:37:42.361" level="INFO">${result} = routing_instance     Prot     Type     DestAddresswithMask     Nexthop     Interfacename
LAN1-VRF BGP N/A +0.0.0.0/0 169.254.0.2 tvi-0/603.0
LAN1-VRF BGP N/A +1.2.3.4/32 40.90.1.1 Indirect
LAN1-VRF BG...</msg>
<status status="PASS" endtime="20200323 17:37:42.361" starttime="20200323 17:37:39.550"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>\\+${CPE2['lan'][1]['nw']}\\s+${CPE2['ESP_IP']}</arg>
</arguments>
<assign>
<var>${active_dest_route}</var>
</assign>
<msg timestamp="20200323 17:37:42.364" level="INFO">${active_dest_route} = \+192.169.111.0/24\s+20.20.90.12</msg>
<status status="PASS" endtime="20200323 17:37:42.364" starttime="20200323 17:37:42.362"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=${active_dest_route}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:37:42.366" level="INFO">routing_instance     Prot     Type     DestAddresswithMask     Nexthop     Interfacename
LAN1-VRF BGP N/A +0.0.0.0/0 169.254.0.2 tvi-0/603.0
LAN1-VRF BGP N/A +1.2.3.4/32 40.90.1.1 Indirect
LAN1-VRF BGP N/A 1.2.3.4/32 40.90.1.2 Indirect
LAN1-VRF BGP N/A +10.9.0.0/24 40.90.1.1 Indirect
LAN1-VRF BGP N/A 10.9.0.0/24 40.90.1.2 Indirect
LAN1-VRF BGP N/A +10.20.30.0/30 40.90.1.1 Indirect
LAN1-VRF BGP N/A 10.20.30.0/30 40.90.1.2 Indirect
LAN1-VRF BGP N/A 10.90.47.64/30 40.90.1.1 Indirect
LAN1-VRF BGP N/A +10.90.47.64/30 40.90.1.2 Indirect
LAN1-VRF BGP N/A +111.93.152.112/28 40.90.1.1 Indirect
LAN1-VRF BGP N/A 111.93.152.112/28 40.90.1.2 Indirect
LAN1-VRF conn N/A +169.254.0.2/31 0.0.0.0 tvi-0/603.0
LAN1-VRF local N/A +169.254.0.3/32 0.0.0.0 directly connected
LAN1-VRF BGP N/A 192.169.101.0/24 40.90.1.1 Indirect
LAN1-VRF BGP N/A 192.169.101.0/24 40.90.1.2 Indirect
LAN1-VRF conn N/A +192.169.101.0/24 0.0.0.0 vni-0/4.600
LAN1-VRF local N/A +192.169.101.1/32 0.0.0.0 directly connected
LAN1-VRF BGP N/A +192.169.111.0/24 20.20.90.12 Indirect
LAN1-VRF BGP N/A 192.169.111.0/24 40.90.1.1 Indirect
LAN1-VRF BGP N/A 192.169.111.0/24 40.90.1.2 Indirect
LAN1-VRF BGP N/A +192.169.241.0/24 20.20.90.25 Indirect
LAN1-VRF BGP N/A 192.169.241.0/24 40.90.1.1 Indirect
LAN1-VRF BGP N/A 192.169.241.0/24 40.90.1.2 Indirect
LAN1-VRF BGP N/A +192.170.101.0/24 20.20.90.45 Indirect
LAN1-VRF BGP N/A 192.170.101.0/24 40.90.1.1 Indirect
LAN1-VRF BGP N/A 192.170.101.0/24 40.90.1.2 Indirect
LAN1-VRF BGP N/A +193.90.1.0/30 40.90.1.1 Indirect
LAN1-VRF BGP N/A 193.90.1.0/30 40.90.1.2 Indirect
LAN1-VRF BGP N/A 193.90.2.0/30 40.90.1.1 Indirect
LAN1-VRF BGP N/A +193.90.2.0/30 40.90.1.2 Indirect
LAN1-VRF BGP N/A +217.110.230.96/27 40.90.1.1 Indirect
LAN1-VRF BGP N/A 217.110.230.96/27 40.90.1.2 Indirect
</msg>
<status status="PASS" endtime="20200323 17:37:42.366" starttime="20200323 17:37:42.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:37:42.367" level="INFO">\+192.169.111.0/24\s+20.20.90.12</msg>
<status status="PASS" endtime="20200323 17:37:42.367" starttime="20200323 17:37:42.366"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:37:42.370" starttime="20200323 17:37:42.369"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:42.370" starttime="20200323 17:37:42.368"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:42.370" starttime="20200323 17:37:42.364"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:42.371" starttime="20200323 17:37:39.549"></status>
</kw>
<kw name="CHECK CPE1 LAN ROUTE Present in CPE2">
<kw name="Check Lan Route" library="CPE2">
<arguments>
<arg>lan=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:37:45.181" level="INFO">${result} = routing_instance     Prot     Type     DestAddresswithMask     Nexthop     Interfacename
LAN1-VRF BGP N/A +0.0.0.0/0 169.254.0.2 tvi-0/603.0
LAN1-VRF BGP N/A +1.2.3.4/32 40.90.1.1 Indirect
LAN1-VRF BG...</msg>
<status status="PASS" endtime="20200323 17:37:45.181" starttime="20200323 17:37:42.372"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>\\+${CPE1['lan'][1]['nw']}\\s+${CPE1['ESP_IP']}</arg>
</arguments>
<assign>
<var>${active_dest_route}</var>
</assign>
<msg timestamp="20200323 17:37:45.183" level="INFO">${active_dest_route} = \+192.169.101.0/24\s+20.20.90.11</msg>
<status status="PASS" endtime="20200323 17:37:45.183" starttime="20200323 17:37:45.182"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=${active_dest_route}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:37:45.185" level="INFO">routing_instance     Prot     Type     DestAddresswithMask     Nexthop     Interfacename
LAN1-VRF BGP N/A +0.0.0.0/0 169.254.0.2 tvi-0/603.0
LAN1-VRF BGP N/A +1.2.3.4/32 40.90.1.1 Indirect
LAN1-VRF BGP N/A 1.2.3.4/32 40.90.1.2 Indirect
LAN1-VRF BGP N/A +10.9.0.0/24 40.90.1.1 Indirect
LAN1-VRF BGP N/A 10.9.0.0/24 40.90.1.2 Indirect
LAN1-VRF BGP N/A +10.20.30.0/30 40.90.1.1 Indirect
LAN1-VRF BGP N/A 10.20.30.0/30 40.90.1.2 Indirect
LAN1-VRF BGP N/A 10.90.47.64/30 40.90.1.1 Indirect
LAN1-VRF BGP N/A +10.90.47.64/30 40.90.1.2 Indirect
LAN1-VRF BGP N/A +111.93.152.112/28 40.90.1.1 Indirect
LAN1-VRF BGP N/A 111.93.152.112/28 40.90.1.2 Indirect
LAN1-VRF conn N/A +169.254.0.2/31 0.0.0.0 tvi-0/603.0
LAN1-VRF local N/A +169.254.0.3/32 0.0.0.0 directly connected
LAN1-VRF BGP N/A +192.169.101.0/24 20.20.90.11 Indirect
LAN1-VRF BGP N/A 192.169.101.0/24 40.90.1.1 Indirect
LAN1-VRF BGP N/A 192.169.101.0/24 40.90.1.2 Indirect
LAN1-VRF BGP N/A 192.169.111.0/24 40.90.1.1 Indirect
LAN1-VRF BGP N/A 192.169.111.0/24 40.90.1.2 Indirect
LAN1-VRF conn N/A +192.169.111.0/24 0.0.0.0 vni-0/4.610
LAN1-VRF local N/A +192.169.111.1/32 0.0.0.0 directly connected
LAN1-VRF BGP N/A +192.169.241.0/24 20.20.90.25 Indirect
LAN1-VRF BGP N/A 192.169.241.0/24 40.90.1.1 Indirect
LAN1-VRF BGP N/A 192.169.241.0/24 40.90.1.2 Indirect
LAN1-VRF BGP N/A +192.170.101.0/24 20.20.90.45 Indirect
LAN1-VRF BGP N/A 192.170.101.0/24 40.90.1.1 Indirect
LAN1-VRF BGP N/A 192.170.101.0/24 40.90.1.2 Indirect
LAN1-VRF BGP N/A +193.90.1.0/30 40.90.1.1 Indirect
LAN1-VRF BGP N/A 193.90.1.0/30 40.90.1.2 Indirect
LAN1-VRF BGP N/A 193.90.2.0/30 40.90.1.1 Indirect
LAN1-VRF BGP N/A +193.90.2.0/30 40.90.1.2 Indirect
LAN1-VRF BGP N/A +217.110.230.96/27 40.90.1.1 Indirect
LAN1-VRF BGP N/A 217.110.230.96/27 40.90.1.2 Indirect
</msg>
<status status="PASS" endtime="20200323 17:37:45.186" starttime="20200323 17:37:45.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:37:45.186" level="INFO">\+192.169.101.0/24\s+20.20.90.11</msg>
<status status="PASS" endtime="20200323 17:37:45.187" starttime="20200323 17:37:45.186"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:37:45.189" starttime="20200323 17:37:45.188"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:45.189" starttime="20200323 17:37:45.187"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:45.189" starttime="20200323 17:37:45.184"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:45.189" starttime="20200323 17:37:42.372"></status>
</kw>
<doc>SANITY CHECKS on vCPE</doc>
<tags>
<tag>SANITY1</tag>
</tags>
<status status="PASS" endtime="20200323 17:37:45.190" critical="yes" starttime="20200323 17:37:24.836"></status>
</test>
<test id="s1-t2" name="NV_SINGLE_CPE_HYBRID_SANITY_02">
<kw name="Ping Test VM1 to VM2(1 LAN)">
<tags>
<tag>HYBRID</tag>
</tags>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM2['lan'][1]['second_host']}</arg>
</arguments>
<assign>
<var>${destip}</var>
</assign>
<msg timestamp="20200323 17:37:45.195" level="INFO">${destip} = 192.169.111.2</msg>
<status status="PASS" endtime="20200323 17:37:45.195" starttime="20200323 17:37:45.194"></status>
</kw>
<kw name="Shell Ping" library="VM1">
<arguments>
<arg>${destip}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:37:49.807" level="INFO">sudo ping 192.169.111.2 -c 5
sudo ping 192.169.111.2 -c 5
PING 192.169.111.2 (192.169.111.2) 56(84) bytes of data.
64 bytes from 192.169.111.2: icmp_seq=1 ttl=62 time=2.28 ms
64 bytes from 192.169.111.2: icmp_seq=2 ttl=62 time=2.55 ms
64 bytes from 192.169.111.2: icmp_seq=3 ttl=62 time=2.46 ms
64 bytes from 192.169.111.2: icmp_seq=4 ttl=62 time=2.15 ms
64 bytes from 192.169.111.2: icmp_seq=5 ttl=62 time=2.23 ms

--- 192.169.111.2 ping statistics ---
5 packets transmitted, 5 received, 0% packet loss, time 4006ms
rtt min/avg/max/mdev = 2.159/2.339/2.553/0.156 ms
sathish@VM1:~$</msg>
<msg timestamp="20200323 17:37:49.808" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20200323 17:37:49.808" starttime="20200323 17:37:45.196"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:37:49.811" level="INFO">True</msg>
<status status="PASS" endtime="20200323 17:37:49.811" starttime="20200323 17:37:49.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:37:49.812" level="INFO">True</msg>
<status status="PASS" endtime="20200323 17:37:49.812" starttime="20200323 17:37:49.811"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:37:49.814" starttime="20200323 17:37:49.813"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:49.814" starttime="20200323 17:37:49.812"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:49.814" starttime="20200323 17:37:49.808"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:49.814" starttime="20200323 17:37:45.193"></status>
</kw>
<kw name="Ping Test VM2 to VM1(1 LAN)">
<tags>
<tag>HYBRID</tag>
</tags>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM1['lan'][1]['second_host']}</arg>
</arguments>
<assign>
<var>${destip}</var>
</assign>
<msg timestamp="20200323 17:37:49.816" level="INFO">${destip} = 192.169.101.2</msg>
<status status="PASS" endtime="20200323 17:37:49.816" starttime="20200323 17:37:49.815"></status>
</kw>
<kw name="Shell Ping" library="VM2">
<arguments>
<arg>${destip}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:37:54.428" level="INFO">sudo ping 192.169.101.2 -c 5
sudo ping 192.169.101.2 -c 5
PING 192.169.101.2 (192.169.101.2) 56(84) bytes of data.
64 bytes from 192.169.101.2: icmp_seq=1 ttl=62 time=2.51 ms
64 bytes from 192.169.101.2: icmp_seq=2 ttl=62 time=2.37 ms
64 bytes from 192.169.101.2: icmp_seq=3 ttl=62 time=2.28 ms
64 bytes from 192.169.101.2: icmp_seq=4 ttl=62 time=2.14 ms
64 bytes from 192.169.101.2: icmp_seq=5 ttl=62 time=2.03 ms

--- 192.169.101.2 ping statistics ---
5 packets transmitted, 5 received, 0% packet loss, time 4007ms
rtt min/avg/max/mdev = 2.035/2.270/2.516/0.175 ms
sathish@CPE12-VM1:~$</msg>
<msg timestamp="20200323 17:37:54.429" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20200323 17:37:54.429" starttime="20200323 17:37:49.817"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:37:54.431" level="INFO">True</msg>
<status status="PASS" endtime="20200323 17:37:54.431" starttime="20200323 17:37:54.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:37:54.432" level="INFO">True</msg>
<status status="PASS" endtime="20200323 17:37:54.432" starttime="20200323 17:37:54.432"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:37:54.434" starttime="20200323 17:37:54.434"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:54.434" starttime="20200323 17:37:54.433"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:54.435" starttime="20200323 17:37:54.429"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:54.435" starttime="20200323 17:37:49.815"></status>
</kw>
<doc>Ping test CPE1 LAN1 VM to CPE2 LAN1 VM</doc>
<tags>
<tag>PING</tag>
</tags>
<status status="PASS" endtime="20200323 17:37:54.436" critical="yes" starttime="20200323 17:37:45.191"></status>
</test>
<test id="s1-t3" name="NV_SINGLE_CPE_HYBRID_SANITY_03">
<kw name="Ping Test VM1 to VM2(ALL LANS)">
<tags>
<tag>HYBRID</tag>
</tags>
<kw type="for" name="${vlan} IN RANGE [ 1 | ${VM1['NO_OF_VRFS']} + 1 ]">
<kw type="foritem" name="${vlan} = 1">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM2['lan'][${vlan}]['second_host']}</arg>
</arguments>
<assign>
<var>${destip}</var>
</assign>
<msg timestamp="20200323 17:37:54.441" level="INFO">${destip} = 192.169.111.2</msg>
<status status="PASS" endtime="20200323 17:37:54.441" starttime="20200323 17:37:54.440"></status>
</kw>
<kw name="Shell Ping" library="VM1">
<arguments>
<arg>${destip}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:37:59.062" level="INFO">sudo ping 192.169.111.2 -c 5
sudo ping 192.169.111.2 -c 5
PING 192.169.111.2 (192.169.111.2) 56(84) bytes of data.
64 bytes from 192.169.111.2: icmp_seq=1 ttl=62 time=2.85 ms
64 bytes from 192.169.111.2: icmp_seq=2 ttl=62 time=1.76 ms
64 bytes from 192.169.111.2: icmp_seq=3 ttl=62 time=2.28 ms
64 bytes from 192.169.111.2: icmp_seq=4 ttl=62 time=3.79 ms
64 bytes from 192.169.111.2: icmp_seq=5 ttl=62 time=2.62 ms

--- 192.169.111.2 ping statistics ---
5 packets transmitted, 5 received, 0% packet loss, time 4006ms
rtt min/avg/max/mdev = 1.765/2.664/3.795/0.674 ms
sathish@VM1:~$</msg>
<msg timestamp="20200323 17:37:59.063" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20200323 17:37:59.063" starttime="20200323 17:37:54.442"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:37:59.067" level="INFO">True</msg>
<status status="PASS" endtime="20200323 17:37:59.067" starttime="20200323 17:37:59.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:37:59.069" level="INFO">True</msg>
<status status="PASS" endtime="20200323 17:37:59.069" starttime="20200323 17:37:59.068"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:37:59.072" starttime="20200323 17:37:59.071"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:59.072" starttime="20200323 17:37:59.070"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:59.073" starttime="20200323 17:37:59.064"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:59.073" starttime="20200323 17:37:54.440"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:59.073" starttime="20200323 17:37:54.439"></status>
</kw>
<status status="PASS" endtime="20200323 17:37:59.074" starttime="20200323 17:37:54.438"></status>
</kw>
<kw name="Ping Test VM2 to VM1(ALL LANS)">
<tags>
<tag>HYBRID</tag>
</tags>
<kw type="for" name="${vlan} IN RANGE [ 1 | ${VM2['NO_OF_VRFS']} + 1 ]">
<kw type="foritem" name="${vlan} = 1">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM1['lan'][${vlan}]['second_host']}</arg>
</arguments>
<assign>
<var>${destip}</var>
</assign>
<msg timestamp="20200323 17:37:59.079" level="INFO">${destip} = 192.169.101.2</msg>
<status status="PASS" endtime="20200323 17:37:59.079" starttime="20200323 17:37:59.077"></status>
</kw>
<kw name="Shell Ping" library="VM1">
<arguments>
<arg>${destip}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:38:03.695" level="INFO">sudo ping 192.169.101.2 -c 5
sudo ping 192.169.101.2 -c 5
PING 192.169.101.2 (192.169.101.2) 56(84) bytes of data.
64 bytes from 192.169.101.2: icmp_seq=1 ttl=64 time=0.117 ms
64 bytes from 192.169.101.2: icmp_seq=2 ttl=64 time=0.073 ms
64 bytes from 192.169.101.2: icmp_seq=3 ttl=64 time=0.071 ms
64 bytes from 192.169.101.2: icmp_seq=4 ttl=64 time=0.056 ms
64 bytes from 192.169.101.2: icmp_seq=5 ttl=64 time=0.053 ms

--- 192.169.101.2 ping statistics ---
5 packets transmitted, 5 received, 0% packet loss, time 3998ms
rtt min/avg/max/mdev = 0.053/0.074/0.117/0.022 ms
sathish@VM1:~$</msg>
<msg timestamp="20200323 17:38:03.696" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20200323 17:38:03.696" starttime="20200323 17:37:59.079"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:38:03.698" level="INFO">True</msg>
<status status="PASS" endtime="20200323 17:38:03.698" starttime="20200323 17:38:03.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:38:03.699" level="INFO">True</msg>
<status status="PASS" endtime="20200323 17:38:03.699" starttime="20200323 17:38:03.698"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:38:03.702" starttime="20200323 17:38:03.700"></status>
</kw>
<status status="PASS" endtime="20200323 17:38:03.702" starttime="20200323 17:38:03.699"></status>
</kw>
<status status="PASS" endtime="20200323 17:38:03.702" starttime="20200323 17:38:03.696"></status>
</kw>
<status status="PASS" endtime="20200323 17:38:03.702" starttime="20200323 17:37:59.077"></status>
</kw>
<status status="PASS" endtime="20200323 17:38:03.702" starttime="20200323 17:37:59.076"></status>
</kw>
<status status="PASS" endtime="20200323 17:38:03.703" starttime="20200323 17:37:59.075"></status>
</kw>
<doc>Ping test CPE1 ALL LAN VM to CPE2 ALL LAN VM</doc>
<tags>
<tag>PING</tag>
</tags>
<status status="PASS" endtime="20200323 17:38:03.703" critical="yes" starttime="20200323 17:37:54.437"></status>
</test>
<test id="s1-t4" name="NV_SINGLE_CPE_HYBRID_SANITY_04">
<kw name="Iperf3 test VM1 to VM2">
<tags>
<tag>HYBRID</tag>
</tags>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM2['lan'][1]['second_host']}</arg>
</arguments>
<assign>
<var>${destip}</var>
</assign>
<msg timestamp="20200323 17:38:03.709" level="INFO">${destip} = 192.169.111.2</msg>
<status status="PASS" endtime="20200323 17:38:03.709" starttime="20200323 17:38:03.708"></status>
</kw>
<kw name="Send Commands And Expect" library="VM2">
<arguments>
<arg>pkill iperf3 &amp;</arg>
</arguments>
<status status="PASS" endtime="20200323 17:38:04.111" starttime="20200323 17:38:03.709"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200323 17:38:14.112" level="INFO">Slept 10 seconds</msg>
<status status="PASS" endtime="20200323 17:38:14.113" starttime="20200323 17:38:04.112"></status>
</kw>
<kw name="Send Commands And Expect" library="VM2">
<arguments>
<arg>iperf3 -s &amp;</arg>
</arguments>
<status status="PASS" endtime="20200323 17:38:14.517" starttime="20200323 17:38:14.114"></status>
</kw>
<kw name="Send Commands And Expect" library="VM1">
<arguments>
<arg>iperf3 -c ${destip}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:38:25.138" level="INFO">${result} = iperf3 -c 192.169.111.2
Connecting to host 192.169.111.2, port 5201
[  4] local 192.169.101.2 port 35024 connected to 192.169.111.2 port 5201
[ ID] Interval           Transfer     Bandwidth       Retr...</msg>
<status status="PASS" endtime="20200323 17:38:25.138" starttime="20200323 17:38:14.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>iperf Done.</arg>
</arguments>
<status status="PASS" endtime="20200323 17:38:25.140" starttime="20200323 17:38:25.139"></status>
</kw>
<status status="PASS" endtime="20200323 17:38:25.140" starttime="20200323 17:38:03.707"></status>
</kw>
<doc>Iperf test VM1 to VM2</doc>
<tags>
<tag>IPERF</tag>
</tags>
<status status="PASS" endtime="20200323 17:38:25.141" critical="yes" starttime="20200323 17:38:03.704"></status>
</test>
<test id="s1-t5" name="NV_SINGLE_CPE_HYBRID_TRAFFIC_STEERING_01">
<kw name="Create Policy Rule" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
<arg>${fwp_1}</arg>
<arg>dest_address_obj=${ipaddobj_2}</arg>
</arguments>
<msg timestamp="20200323 17:38:25.146" level="INFO">
CREATE Policy rule
</msg>
<msg timestamp="20200323 17:38:27.403" level="INFO">
PASS</msg>
<msg timestamp="20200323 17:38:27.404" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; CREATE POLICY RULE PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20200323 17:38:27.404" level="INFO">{
	"rule": {
		"name": "policy_rule_11",
		"tag": [],
		"match": {
			"source": {
				"zone": {},
				"address": {
				
				},
				"user": {
					"user-type": "any",
					"local-database": {
						"status": "disabled"
					},
					"external-database": {
						"status": "disabled"
					}
				}
			},
			"destination": {
				"zone": {},
				"address": {
				"address-list": ["dst_ip_add_obj11"]
				
				}
			},
			"application": {
				
			},
			
			"ttl": {}
		},
		"set": {
			"lef": {
				"event": "never",
				"rate-limit": 10
			},
			"action": "allow",
			"forwarding-profile": "FWP112"
		},
		"monitor": {
			"interval": "3",
			"threshold": "5"
		}
	}
}</msg>
<status status="PASS" endtime="20200323 17:38:27.404" starttime="20200323 17:38:25.144"></status>
</kw>
<kw name="Move Policy Rule" library="VD1">
<arguments>
<arg>${CPE1['Device_name']}</arg>
<arg>${cpe1['ORG_NAME']}</arg>
<arg>Default-Policy</arg>
<arg>${plcyrule_1}</arg>
<arg>first</arg>
</arguments>
<msg timestamp="20200323 17:38:34.968" level="INFO">move devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 first
[ok][2020-03-23 12:03:15]

[edit]
Automated@VDir-BLR-NEW-01% commit
Commit complete.
[ok][2020-03-23 12:03:16]

[edit]
Automated@VDir-BLR-NEW-01% exit configuration-mode
[ok][2020-03-23 12:03:20]
Automated@VDir-BLR-NEW-01&gt;</msg>
<status status="PASS" endtime="20200323 17:38:34.969" starttime="20200323 17:38:27.405"></status>
</kw>
<kw name="REQ CLR SESSION ALL">
<kw name="Req Clr Sess All" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:38:35.573" level="INFO">${result} = request clear sessions all
[ok][2020-03-23 11:57:52]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:38:35.573" starttime="20200323 17:38:34.970"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:38:35.575" starttime="20200323 17:38:35.574"></status>
</kw>
<status status="PASS" endtime="20200323 17:38:35.575" starttime="20200323 17:38:34.969"></status>
</kw>
<kw name="SHOW SESSION SDWAN DETAIL">
<kw name="Show Session Sdwan Detail" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:38:36.781" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore</msg>
<msg timestamp="20200323 17:38:36.782" level="INFO">${result} = show orgs org IPC00190 sessions sdwan detail  | nomore
% No entries found.
[ok][2020-03-23 11:57:53]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:38:36.782" starttime="20200323 17:38:35.577"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:38:36.783" starttime="20200323 17:38:36.782"></status>
</kw>
<status status="PASS" endtime="20200323 17:38:36.784" starttime="20200323 17:38:35.576"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:38:37.788" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20200323 17:38:37.789" level="INFO">${result} = show interfaces port statistics brief | tab  | nomore
                     IF                                                                                                        
                 ...</msg>
<status status="PASS" endtime="20200323 17:38:37.789" starttime="20200323 17:38:36.785"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:38:37.791" starttime="20200323 17:38:37.790"></status>
</kw>
<status status="PASS" endtime="20200323 17:38:37.792" starttime="20200323 17:38:36.784"></status>
</kw>
<kw name="SHOW COMMIT CHANGES 0">
<kw name="Show Commit Changes 0" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:38:45.408" level="INFO">show commit changes 0 | nomore</msg>
<msg timestamp="20200323 17:38:45.408" level="INFO">${result} = show commit changes 0 | nomore
#
# Created by: admin
# Date: 2020-03-23 11:57:45
# Client: netconf
#
 orgs {
     org-services IPC00190 {
         sd-wan {
             policies {
                 Def...</msg>
<status status="PASS" endtime="20200323 17:38:45.409" starttime="20200323 17:38:37.793"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:38:45.411" starttime="20200323 17:38:45.409"></status>
</kw>
<status status="PASS" endtime="20200323 17:38:45.411" starttime="20200323 17:38:37.792"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200323 17:38:55.413" level="INFO">Slept 10 seconds</msg>
<status status="PASS" endtime="20200323 17:38:55.413" starttime="20200323 17:38:45.411"></status>
</kw>
<kw name="Start Stream Traffic" library="spirent1">
<arguments>
<arg>${stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20200323 17:38:57.091" level="INFO">streamblock1
***** run sth.traffic_control successfully</msg>
<status status="PASS" endtime="20200323 17:38:57.091" starttime="20200323 17:38:55.414"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>40s</arg>
</arguments>
<msg timestamp="20200323 17:39:37.092" level="INFO">Slept 40 seconds</msg>
<status status="PASS" endtime="20200323 17:39:37.093" starttime="20200323 17:38:57.092"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:39:38.298" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20200323 17:39:38.298" level="INFO">${result} = show interfaces port statistics brief | tab  | nomore
                     IF                                                                                                                
         ...</msg>
<status status="PASS" endtime="20200323 17:39:38.299" starttime="20200323 17:39:37.094"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:39:38.300" starttime="20200323 17:39:38.299"></status>
</kw>
<status status="PASS" endtime="20200323 17:39:38.300" starttime="20200323 17:39:37.093"></status>
</kw>
<kw name="Show Session Sdwan Detail" library="CPE1">
<arguments>
<arg>source_port=2000</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:39:39.705" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select source-port 2000</msg>
<msg timestamp="20200323 17:39:39.705" level="INFO">${result} = show orgs org IPC00190 sessions sdwan detail  | nomore| select[8D | select source-port 2000
sessions sdwan detail 0 2 15277
 source-ip                  192.169.101.3
 destination-ip             192....</msg>
<status status="PASS" endtime="20200323 17:39:39.706" starttime="20200323 17:39:38.301"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=tx-wan-ckt${SPACE*17}${CPE1['WAN1_NAME']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:39:39.709" level="INFO">show orgs org IPC00190 sessions sdwan detail  | nomore| select[8D | select source-port 2000
sessions sdwan detail 0 2 15277
 source-ip                  192.169.101.3
 destination-ip             192.169.111.3
 source-port                2000
 destination-port           1024
 protocol                   6
 natted                     No
 sdwan                      Yes
 application                -
 forward-pkt-count          59124
 forward-byte-count         8159112
 reverse-pkt-count          0
 reverse-byte-count         0
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:42
 idle-for                   00:00:00
 idle-timeout               240
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/45
 reverse-ingress-interface  n/a
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 -
 tx-wan-ckt                 MPLS-WAN:MPLS-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         MPLS-WAN:MPLS-WAN
 reverse-ingress-ckt        -
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-03-23 11:58:56]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:39:39.710" starttime="20200323 17:39:39.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:39:39.710" level="INFO">tx-wan-ckt                 MPLS-WAN</msg>
<status status="PASS" endtime="20200323 17:39:39.710" starttime="20200323 17:39:39.710"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:39:39.713" starttime="20200323 17:39:39.711"></status>
</kw>
<status status="PASS" endtime="20200323 17:39:39.713" starttime="20200323 17:39:39.711"></status>
</kw>
<status status="PASS" endtime="20200323 17:39:39.713" starttime="20200323 17:39:39.706"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=sdwan-rule-name${SPACE*12}${plcyrule_1}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:39:39.715" level="INFO">show orgs org IPC00190 sessions sdwan detail  | nomore| select[8D | select source-port 2000
sessions sdwan detail 0 2 15277
 source-ip                  192.169.101.3
 destination-ip             192.169.111.3
 source-port                2000
 destination-port           1024
 protocol                   6
 natted                     No
 sdwan                      Yes
 application                -
 forward-pkt-count          59124
 forward-byte-count         8159112
 reverse-pkt-count          0
 reverse-byte-count         0
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:42
 idle-for                   00:00:00
 idle-timeout               240
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/45
 reverse-ingress-interface  n/a
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 -
 tx-wan-ckt                 MPLS-WAN:MPLS-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         MPLS-WAN:MPLS-WAN
 reverse-ingress-ckt        -
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-03-23 11:58:56]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:39:39.716" starttime="20200323 17:39:39.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:39:39.716" level="INFO">sdwan-rule-name            policy_rule_11</msg>
<status status="PASS" endtime="20200323 17:39:39.717" starttime="20200323 17:39:39.716"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:39:39.718" starttime="20200323 17:39:39.717"></status>
</kw>
<status status="PASS" endtime="20200323 17:39:39.719" starttime="20200323 17:39:39.717"></status>
</kw>
<status status="PASS" endtime="20200323 17:39:39.719" starttime="20200323 17:39:39.713"></status>
</kw>
<kw name="Start Stream Traffic" library="spirent1">
<arguments>
<arg>${stream2['stream_id']}</arg>
</arguments>
<msg timestamp="20200323 17:39:39.805" level="INFO">streamblock2
***** run sth.traffic_control successfully</msg>
<status status="PASS" endtime="20200323 17:39:39.805" starttime="20200323 17:39:39.719"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>40s</arg>
</arguments>
<msg timestamp="20200323 17:40:19.807" level="INFO">Slept 40 seconds</msg>
<status status="PASS" endtime="20200323 17:40:19.807" starttime="20200323 17:39:39.806"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:40:21.015" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20200323 17:40:21.016" level="INFO">${result} = show interfaces port statistics brief | tab  | nomore
                     IF                                                                                                                
         ...</msg>
<status status="PASS" endtime="20200323 17:40:21.016" starttime="20200323 17:40:19.809"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:40:21.018" starttime="20200323 17:40:21.017"></status>
</kw>
<status status="PASS" endtime="20200323 17:40:21.019" starttime="20200323 17:40:19.808"></status>
</kw>
<kw name="Show Session Sdwan Detail" library="CPE1">
<arguments>
<arg>source_port=2001</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:40:22.624" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select source-port 2001</msg>
<msg timestamp="20200323 17:40:22.625" level="INFO">${result} = show orgs org IPC00190 sessions sdwan detail  | nomore| select[8D | select source-port 2001
sessions sdwan detail 0 2 15278
 source-ip                  192.169.101.3
 destination-ip             192....</msg>
<status status="PASS" endtime="20200323 17:40:22.625" starttime="20200323 17:40:21.019"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=tx-wan-ckt${SPACE*17}${CPE1['WAN2_NAME']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:40:22.628" level="INFO">show orgs org IPC00190 sessions sdwan detail  | nomore| select[8D | select source-port 2001
sessions sdwan detail 0 2 15278
 source-ip                  192.169.101.3
 destination-ip             192.169.111.3
 source-port                2001
 destination-port           1024
 protocol                   6
 natted                     No
 sdwan                      Yes
 application                -
 forward-pkt-count          59127
 forward-byte-count         8159526
 reverse-pkt-count          0
 reverse-byte-count         0
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:42
 idle-for                   00:00:00
 idle-timeout               240
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/45
 reverse-ingress-interface  n/a
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 -
 tx-wan-ckt                 INT-WAN:INT-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         INT-WAN:INT-WAN
 reverse-ingress-ckt        -
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-03-23 11:59:38]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:40:22.628" starttime="20200323 17:40:22.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:40:22.629" level="INFO">tx-wan-ckt                 INT-WAN</msg>
<status status="PASS" endtime="20200323 17:40:22.629" starttime="20200323 17:40:22.628"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:40:22.631" starttime="20200323 17:40:22.630"></status>
</kw>
<status status="PASS" endtime="20200323 17:40:22.631" starttime="20200323 17:40:22.629"></status>
</kw>
<status status="PASS" endtime="20200323 17:40:22.631" starttime="20200323 17:40:22.625"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=sdwan-rule-name${SPACE*12}${plcyrule_1}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:40:22.633" level="INFO">show orgs org IPC00190 sessions sdwan detail  | nomore| select[8D | select source-port 2001
sessions sdwan detail 0 2 15278
 source-ip                  192.169.101.3
 destination-ip             192.169.111.3
 source-port                2001
 destination-port           1024
 protocol                   6
 natted                     No
 sdwan                      Yes
 application                -
 forward-pkt-count          59127
 forward-byte-count         8159526
 reverse-pkt-count          0
 reverse-byte-count         0
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:42
 idle-for                   00:00:00
 idle-timeout               240
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/45
 reverse-ingress-interface  n/a
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 -
 tx-wan-ckt                 INT-WAN:INT-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         INT-WAN:INT-WAN
 reverse-ingress-ckt        -
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-03-23 11:59:38]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:40:22.634" starttime="20200323 17:40:22.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:40:22.635" level="INFO">sdwan-rule-name            policy_rule_11</msg>
<status status="PASS" endtime="20200323 17:40:22.635" starttime="20200323 17:40:22.634"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:40:22.637" starttime="20200323 17:40:22.636"></status>
</kw>
<status status="PASS" endtime="20200323 17:40:22.637" starttime="20200323 17:40:22.635"></status>
</kw>
<status status="PASS" endtime="20200323 17:40:22.638" starttime="20200323 17:40:22.632"></status>
</kw>
<kw name="Start Stream Traffic" library="spirent1">
<arguments>
<arg>${stream3['stream_id']}</arg>
</arguments>
<msg timestamp="20200323 17:40:22.737" level="INFO">streamblock3
***** run sth.traffic_control successfully</msg>
<status status="PASS" endtime="20200323 17:40:22.737" starttime="20200323 17:40:22.638"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>40s</arg>
</arguments>
<msg timestamp="20200323 17:41:02.738" level="INFO">Slept 40 seconds</msg>
<status status="PASS" endtime="20200323 17:41:02.739" starttime="20200323 17:40:22.738"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:41:03.944" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20200323 17:41:03.945" level="INFO">${result} = show interfaces port statistics brief | tab  | nomore
                     IF                                                                                                                
         ...</msg>
<status status="PASS" endtime="20200323 17:41:03.945" starttime="20200323 17:41:02.740"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:41:03.946" starttime="20200323 17:41:03.945"></status>
</kw>
<status status="PASS" endtime="20200323 17:41:03.947" starttime="20200323 17:41:02.739"></status>
</kw>
<kw name="Show Session Sdwan Detail" library="CPE1">
<arguments>
<arg>source_port=2002</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:41:05.552" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select source-port 2002</msg>
<msg timestamp="20200323 17:41:05.553" level="INFO">${result} = show orgs org IPC00190 sessions sdwan detail  | nomore| select[8D | select source-port 2002
sessions sdwan detail 0 2 15279
 source-ip                  192.169.101.3
 destination-ip             192....</msg>
<status status="PASS" endtime="20200323 17:41:05.553" starttime="20200323 17:41:03.947"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=tx-wan-ckt${SPACE*17}${CPE1['WAN2_NAME']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:41:05.556" level="INFO">show orgs org IPC00190 sessions sdwan detail  | nomore| select[8D | select source-port 2002
sessions sdwan detail 0 2 15279
 source-ip                  192.169.101.3
 destination-ip             192.169.111.3
 source-port                2002
 destination-port           1025
 protocol                   17
 natted                     No
 sdwan                      Yes
 application                unknown_udp
 forward-pkt-count          59146
 forward-byte-count         8162148
 reverse-pkt-count          0
 reverse-byte-count         0
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:42
 idle-for                   00:00:00
 idle-timeout               30
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/45
 reverse-ingress-interface  n/a
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 -
 tx-wan-ckt                 INT-WAN:INT-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         INT-WAN:INT-WAN
 reverse-ingress-ckt        -
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-03-23 12:00:21]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:41:05.556" starttime="20200323 17:41:05.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:41:05.557" level="INFO">tx-wan-ckt                 INT-WAN</msg>
<status status="PASS" endtime="20200323 17:41:05.557" starttime="20200323 17:41:05.556"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:41:05.559" starttime="20200323 17:41:05.558"></status>
</kw>
<status status="PASS" endtime="20200323 17:41:05.559" starttime="20200323 17:41:05.557"></status>
</kw>
<status status="PASS" endtime="20200323 17:41:05.559" starttime="20200323 17:41:05.553"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=sdwan-rule-name${SPACE*12}${plcyrule_1}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:41:05.563" level="INFO">show orgs org IPC00190 sessions sdwan detail  | nomore| select[8D | select source-port 2002
sessions sdwan detail 0 2 15279
 source-ip                  192.169.101.3
 destination-ip             192.169.111.3
 source-port                2002
 destination-port           1025
 protocol                   17
 natted                     No
 sdwan                      Yes
 application                unknown_udp
 forward-pkt-count          59146
 forward-byte-count         8162148
 reverse-pkt-count          0
 reverse-byte-count         0
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:42
 idle-for                   00:00:00
 idle-timeout               30
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/45
 reverse-ingress-interface  n/a
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 -
 tx-wan-ckt                 INT-WAN:INT-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         INT-WAN:INT-WAN
 reverse-ingress-ckt        -
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-03-23 12:00:21]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:41:05.563" starttime="20200323 17:41:05.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:41:05.564" level="INFO">sdwan-rule-name            policy_rule_11</msg>
<status status="PASS" endtime="20200323 17:41:05.564" starttime="20200323 17:41:05.564"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:41:05.567" starttime="20200323 17:41:05.565"></status>
</kw>
<status status="PASS" endtime="20200323 17:41:05.567" starttime="20200323 17:41:05.565"></status>
</kw>
<status status="PASS" endtime="20200323 17:41:05.567" starttime="20200323 17:41:05.560"></status>
</kw>
<kw name="Stop Stream Traffic" library="spirent1">
<arguments>
<arg>${stream3['stream_id']}</arg>
</arguments>
<msg timestamp="20200323 17:41:08.736" level="INFO">***** run sth.traffic_control successfully</msg>
<status status="PASS" endtime="20200323 17:41:08.736" starttime="20200323 17:41:05.568"></status>
</kw>
<kw name="Stop Stream Traffic" library="spirent1">
<arguments>
<arg>${stream2['stream_id']}</arg>
</arguments>
<msg timestamp="20200323 17:41:11.756" level="INFO">***** run sth.traffic_control successfully</msg>
<status status="PASS" endtime="20200323 17:41:11.757" starttime="20200323 17:41:08.737"></status>
</kw>
<kw name="Stop Stream Traffic" library="spirent1">
<arguments>
<arg>${stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20200323 17:41:15.603" level="INFO">***** run sth.traffic_control successfully</msg>
<status status="PASS" endtime="20200323 17:41:15.603" starttime="20200323 17:41:11.757"></status>
</kw>
<kw name="Delete Policy Rule" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
</arguments>
<msg timestamp="20200323 17:41:15.605" level="INFO">
DELETE IPaddress Object
</msg>
<msg timestamp="20200323 17:41:18.009" level="INFO">
PASS</msg>
<msg timestamp="20200323 17:41:18.010" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Policy rule DELETION PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20200323 17:41:18.010" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20200323 17:41:18.010" starttime="20200323 17:41:15.604"></status>
</kw>
<doc>Traffic steering based on Destination IP</doc>
<tags>
<tag>P1</tag>
</tags>
<status status="PASS" endtime="20200323 17:41:18.011" critical="yes" starttime="20200323 17:38:25.142"></status>
</test>
<test id="s1-t6" name="NV_SINGLE_CPE_HYBRID_TRAFFIC_STEERING_02">
<kw name="Create Policy Rule" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
<arg>${fwp_1}</arg>
<arg>src_address_obj=${ipaddobj_1}</arg>
</arguments>
<msg timestamp="20200323 17:41:18.014" level="INFO">
CREATE Policy rule
</msg>
<msg timestamp="20200323 17:41:19.446" level="INFO">
PASS</msg>
<msg timestamp="20200323 17:41:19.446" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; CREATE POLICY RULE PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20200323 17:41:19.447" level="INFO">{
	"rule": {
		"name": "policy_rule_11",
		"tag": [],
		"match": {
			"source": {
				"zone": {},
				"address": {
				"address-list": ["src_ip_add_obj11"]
				
				},
				"user": {
					"user-type": "any",
					"local-database": {
						"status": "disabled"
					},
					"external-database": {
						"status": "disabled"
					}
				}
			},
			"destination": {
				"zone": {},
				"address": {
				
				}
			},
			"application": {
				
			},
			
			"ttl": {}
		},
		"set": {
			"lef": {
				"event": "never",
				"rate-limit": 10
			},
			"action": "allow",
			"forwarding-profile": "FWP112"
		},
		"monitor": {
			"interval": "3",
			"threshold": "5"
		}
	}
}</msg>
<status status="PASS" endtime="20200323 17:41:19.447" starttime="20200323 17:41:18.013"></status>
</kw>
<kw name="Move Policy Rule" library="VD1">
<arguments>
<arg>${CPE1['Device_name']}</arg>
<arg>${cpe1['ORG_NAME']}</arg>
<arg>Default-Policy</arg>
<arg>${plcyrule_1}</arg>
<arg>first</arg>
</arguments>
<msg timestamp="20200323 17:41:27.284" level="INFO">move devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 first
[ok][2020-03-23 12:06:07]

[edit]
Automated@VDir-BLR-NEW-01% commit
Commit complete.
[ok][2020-03-23 12:06:08]

[edit]
Automated@VDir-BLR-NEW-01% exit configuration-mode
[ok][2020-03-23 12:06:12]
Automated@VDir-BLR-NEW-01&gt;</msg>
<status status="PASS" endtime="20200323 17:41:27.284" starttime="20200323 17:41:19.447"></status>
</kw>
<kw name="REQ CLR SESSION ALL">
<kw name="Req Clr Sess All" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:41:27.888" level="INFO">${result} = request clear sessions all
[ok][2020-03-23 12:00:44]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:41:27.888" starttime="20200323 17:41:27.286"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:41:27.889" starttime="20200323 17:41:27.888"></status>
</kw>
<status status="PASS" endtime="20200323 17:41:27.889" starttime="20200323 17:41:27.285"></status>
</kw>
<kw name="SHOW SESSION SDWAN DETAIL">
<kw name="Show Session Sdwan Detail" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:41:29.094" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore</msg>
<msg timestamp="20200323 17:41:29.095" level="INFO">${result} = show orgs org IPC00190 sessions sdwan detail  | nomore
% No entries found.
[ok][2020-03-23 12:00:45]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:41:29.095" starttime="20200323 17:41:27.891"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:41:29.096" starttime="20200323 17:41:29.095"></status>
</kw>
<status status="PASS" endtime="20200323 17:41:29.096" starttime="20200323 17:41:27.890"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:41:30.101" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20200323 17:41:30.101" level="INFO">${result} = show interfaces port statistics brief | tab  | nomore
                     IF                                                                                                          
               ...</msg>
<status status="PASS" endtime="20200323 17:41:30.101" starttime="20200323 17:41:29.097"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:41:30.103" starttime="20200323 17:41:30.102"></status>
</kw>
<status status="PASS" endtime="20200323 17:41:30.103" starttime="20200323 17:41:29.097"></status>
</kw>
<kw name="SHOW COMMIT CHANGES 0">
<kw name="Show Commit Changes 0" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:41:38.321" level="INFO">show commit changes 0 | nomore</msg>
<msg timestamp="20200323 17:41:38.321" level="INFO">${result} = show commit changes 0 | nomore
#
# Created by: admin
# Date: 2020-03-23 12:00:37
# Client: netconf
#
 orgs {
     org-services IPC00190 {
         sd-wan {
             policies {
                 Def...</msg>
<status status="PASS" endtime="20200323 17:41:38.322" starttime="20200323 17:41:30.104"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:41:38.324" starttime="20200323 17:41:38.322"></status>
</kw>
<status status="PASS" endtime="20200323 17:41:38.324" starttime="20200323 17:41:30.104"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200323 17:41:48.325" level="INFO">Slept 10 seconds</msg>
<status status="PASS" endtime="20200323 17:41:48.326" starttime="20200323 17:41:38.324"></status>
</kw>
<kw name="Start Stream Traffic" library="spirent1">
<arguments>
<arg>${stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20200323 17:41:48.924" level="INFO">streamblock1
***** run sth.traffic_control successfully</msg>
<status status="PASS" endtime="20200323 17:41:48.925" starttime="20200323 17:41:48.326"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>40s</arg>
</arguments>
<msg timestamp="20200323 17:42:28.926" level="INFO">Slept 40 seconds</msg>
<status status="PASS" endtime="20200323 17:42:28.927" starttime="20200323 17:41:48.925"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:42:29.931" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20200323 17:42:29.932" level="INFO">${result} = show interfaces port statistics brief | tab  | nomore
                     IF                                                                                                                
         ...</msg>
<status status="PASS" endtime="20200323 17:42:29.932" starttime="20200323 17:42:28.928"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:42:29.933" starttime="20200323 17:42:29.932"></status>
</kw>
<status status="PASS" endtime="20200323 17:42:29.934" starttime="20200323 17:42:28.927"></status>
</kw>
<kw name="Show Session Sdwan Detail" library="CPE1">
<arguments>
<arg>source_port=2000</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:42:31.539" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select source-port 2000</msg>
<msg timestamp="20200323 17:42:31.539" level="INFO">${result} = show orgs org IPC00190 sessions sdwan detail  | nomore| select[8D | select source-port 2000
sessions sdwan detail 0 2 15280
 source-ip                  192.169.101.3
 destination-ip             192....</msg>
<status status="PASS" endtime="20200323 17:42:31.539" starttime="20200323 17:42:29.934"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=tx-wan-ckt${SPACE*17}${CPE1['WAN1_NAME']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:42:31.542" level="INFO">show orgs org IPC00190 sessions sdwan detail  | nomore| select[8D | select source-port 2000
sessions sdwan detail 0 2 15280
 source-ip                  192.169.101.3
 destination-ip             192.169.111.3
 source-port                2000
 destination-port           1024
 protocol                   6
 natted                     No
 sdwan                      Yes
 application                -
 forward-pkt-count          58858
 forward-byte-count         8122404
 reverse-pkt-count          0
 reverse-byte-count         0
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:42
 idle-for                   00:00:00
 idle-timeout               240
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/45
 reverse-ingress-interface  n/a
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 -
 tx-wan-ckt                 MPLS-WAN:MPLS-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         MPLS-WAN:MPLS-WAN
 reverse-ingress-ckt        -
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-03-23 12:01:47]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:42:31.542" starttime="20200323 17:42:31.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:42:31.543" level="INFO">tx-wan-ckt                 MPLS-WAN</msg>
<status status="PASS" endtime="20200323 17:42:31.543" starttime="20200323 17:42:31.543"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:42:31.545" starttime="20200323 17:42:31.544"></status>
</kw>
<status status="PASS" endtime="20200323 17:42:31.545" starttime="20200323 17:42:31.544"></status>
</kw>
<status status="PASS" endtime="20200323 17:42:31.545" starttime="20200323 17:42:31.540"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=sdwan-rule-name${SPACE*12}${plcyrule_1}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:42:31.548" level="INFO">show orgs org IPC00190 sessions sdwan detail  | nomore| select[8D | select source-port 2000
sessions sdwan detail 0 2 15280
 source-ip                  192.169.101.3
 destination-ip             192.169.111.3
 source-port                2000
 destination-port           1024
 protocol                   6
 natted                     No
 sdwan                      Yes
 application                -
 forward-pkt-count          58858
 forward-byte-count         8122404
 reverse-pkt-count          0
 reverse-byte-count         0
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:42
 idle-for                   00:00:00
 idle-timeout               240
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/45
 reverse-ingress-interface  n/a
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 -
 tx-wan-ckt                 MPLS-WAN:MPLS-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         MPLS-WAN:MPLS-WAN
 reverse-ingress-ckt        -
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-03-23 12:01:47]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:42:31.548" starttime="20200323 17:42:31.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:42:31.549" level="INFO">sdwan-rule-name            policy_rule_11</msg>
<status status="PASS" endtime="20200323 17:42:31.549" starttime="20200323 17:42:31.548"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:42:31.551" starttime="20200323 17:42:31.551"></status>
</kw>
<status status="PASS" endtime="20200323 17:42:31.552" starttime="20200323 17:42:31.549"></status>
</kw>
<status status="PASS" endtime="20200323 17:42:31.552" starttime="20200323 17:42:31.546"></status>
</kw>
<kw name="Start Stream Traffic" library="spirent1">
<arguments>
<arg>${stream2['stream_id']}</arg>
</arguments>
<msg timestamp="20200323 17:42:31.660" level="INFO">streamblock2
***** run sth.traffic_control successfully</msg>
<status status="PASS" endtime="20200323 17:42:31.661" starttime="20200323 17:42:31.553"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>40s</arg>
</arguments>
<msg timestamp="20200323 17:43:11.662" level="INFO">Slept 40 seconds</msg>
<status status="PASS" endtime="20200323 17:43:11.663" starttime="20200323 17:42:31.661"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:43:12.868" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20200323 17:43:12.868" level="INFO">${result} = show interfaces port statistics brief | tab  | nomore
                     IF                                                                                                                
         ...</msg>
<status status="PASS" endtime="20200323 17:43:12.869" starttime="20200323 17:43:11.664"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:43:12.870" starttime="20200323 17:43:12.869"></status>
</kw>
<status status="PASS" endtime="20200323 17:43:12.870" starttime="20200323 17:43:11.663"></status>
</kw>
<kw name="Show Session Sdwan Detail" library="CPE1">
<arguments>
<arg>source_port=2001</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:43:14.476" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select source-port 2001</msg>
<msg timestamp="20200323 17:43:14.476" level="INFO">${result} = show orgs org IPC00190 sessions sdwan detail  | nomore| select[8D | select source-port 2001
sessions sdwan detail 0 2 15281
 source-ip                  192.169.101.3
 destination-ip             192....</msg>
<status status="PASS" endtime="20200323 17:43:14.477" starttime="20200323 17:43:12.871"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=tx-wan-ckt${SPACE*17}${CPE1['WAN2_NAME']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:43:14.481" level="INFO">show orgs org IPC00190 sessions sdwan detail  | nomore| select[8D | select source-port 2001
sessions sdwan detail 0 2 15281
 source-ip                  192.169.101.3
 destination-ip             192.169.111.3
 source-port                2001
 destination-port           1024
 protocol                   6
 natted                     No
 sdwan                      Yes
 application                -
 forward-pkt-count          59270
 forward-byte-count         8179260
 reverse-pkt-count          0
 reverse-byte-count         0
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:42
 idle-for                   00:00:00
 idle-timeout               240
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/45
 reverse-ingress-interface  n/a
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 -
 tx-wan-ckt                 INT-WAN:INT-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         INT-WAN:INT-WAN
 reverse-ingress-ckt        -
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-03-23 12:02:30]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:43:14.482" starttime="20200323 17:43:14.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:43:14.483" level="INFO">tx-wan-ckt                 INT-WAN</msg>
<status status="PASS" endtime="20200323 17:43:14.483" starttime="20200323 17:43:14.482"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:43:14.486" starttime="20200323 17:43:14.485"></status>
</kw>
<status status="PASS" endtime="20200323 17:43:14.486" starttime="20200323 17:43:14.484"></status>
</kw>
<status status="PASS" endtime="20200323 17:43:14.486" starttime="20200323 17:43:14.478"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=sdwan-rule-name${SPACE*12}${plcyrule_1}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:43:14.489" level="INFO">show orgs org IPC00190 sessions sdwan detail  | nomore| select[8D | select source-port 2001
sessions sdwan detail 0 2 15281
 source-ip                  192.169.101.3
 destination-ip             192.169.111.3
 source-port                2001
 destination-port           1024
 protocol                   6
 natted                     No
 sdwan                      Yes
 application                -
 forward-pkt-count          59270
 forward-byte-count         8179260
 reverse-pkt-count          0
 reverse-byte-count         0
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:42
 idle-for                   00:00:00
 idle-timeout               240
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/45
 reverse-ingress-interface  n/a
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 -
 tx-wan-ckt                 INT-WAN:INT-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         INT-WAN:INT-WAN
 reverse-ingress-ckt        -
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-03-23 12:02:30]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:43:14.489" starttime="20200323 17:43:14.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:43:14.491" level="INFO">sdwan-rule-name            policy_rule_11</msg>
<status status="PASS" endtime="20200323 17:43:14.491" starttime="20200323 17:43:14.490"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:43:14.493" starttime="20200323 17:43:14.492"></status>
</kw>
<status status="PASS" endtime="20200323 17:43:14.494" starttime="20200323 17:43:14.492"></status>
</kw>
<status status="PASS" endtime="20200323 17:43:14.494" starttime="20200323 17:43:14.487"></status>
</kw>
<kw name="Start Stream Traffic" library="spirent1">
<arguments>
<arg>${stream3['stream_id']}</arg>
</arguments>
<msg timestamp="20200323 17:43:14.590" level="INFO">streamblock3
***** run sth.traffic_control successfully</msg>
<status status="PASS" endtime="20200323 17:43:14.591" starttime="20200323 17:43:14.494"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>40s</arg>
</arguments>
<msg timestamp="20200323 17:43:54.592" level="INFO">Slept 40 seconds</msg>
<status status="PASS" endtime="20200323 17:43:54.593" starttime="20200323 17:43:14.591"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:43:55.798" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20200323 17:43:55.799" level="INFO">${result} = show interfaces port statistics brief | tab  | nomore
                     IF                                                                                                                
         ...</msg>
<status status="PASS" endtime="20200323 17:43:55.799" starttime="20200323 17:43:54.594"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:43:55.800" starttime="20200323 17:43:55.799"></status>
</kw>
<status status="PASS" endtime="20200323 17:43:55.800" starttime="20200323 17:43:54.593"></status>
</kw>
<kw name="Show Session Sdwan Detail" library="CPE1">
<arguments>
<arg>source_port=2002</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:43:57.406" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select source-port 2002</msg>
<msg timestamp="20200323 17:43:57.407" level="INFO">${result} = show orgs org IPC00190 sessions sdwan detail  | nomore| select[8D | select source-port 2002
sessions sdwan detail 0 2 15282
 source-ip                  192.169.101.3
 destination-ip             192....</msg>
<status status="PASS" endtime="20200323 17:43:57.407" starttime="20200323 17:43:55.801"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=tx-wan-ckt${SPACE*17}${CPE1['WAN2_NAME']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:43:57.410" level="INFO">show orgs org IPC00190 sessions sdwan detail  | nomore| select[8D | select source-port 2002
sessions sdwan detail 0 2 15282
 source-ip                  192.169.101.3
 destination-ip             192.169.111.3
 source-port                2002
 destination-port           1025
 protocol                   17
 natted                     No
 sdwan                      Yes
 application                unknown_udp
 forward-pkt-count          59214
 forward-byte-count         8171532
 reverse-pkt-count          0
 reverse-byte-count         0
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:42
 idle-for                   00:00:00
 idle-timeout               30
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/45
 reverse-ingress-interface  n/a
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 -
 tx-wan-ckt                 INT-WAN:INT-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         INT-WAN:INT-WAN
 reverse-ingress-ckt        -
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-03-23 12:03:13]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:43:57.410" starttime="20200323 17:43:57.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:43:57.411" level="INFO">tx-wan-ckt                 INT-WAN</msg>
<status status="PASS" endtime="20200323 17:43:57.411" starttime="20200323 17:43:57.411"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:43:57.413" starttime="20200323 17:43:57.412"></status>
</kw>
<status status="PASS" endtime="20200323 17:43:57.413" starttime="20200323 17:43:57.412"></status>
</kw>
<status status="PASS" endtime="20200323 17:43:57.413" starttime="20200323 17:43:57.407"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=sdwan-rule-name${SPACE*12}${plcyrule_1}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:43:57.416" level="INFO">show orgs org IPC00190 sessions sdwan detail  | nomore| select[8D | select source-port 2002
sessions sdwan detail 0 2 15282
 source-ip                  192.169.101.3
 destination-ip             192.169.111.3
 source-port                2002
 destination-port           1025
 protocol                   17
 natted                     No
 sdwan                      Yes
 application                unknown_udp
 forward-pkt-count          59214
 forward-byte-count         8171532
 reverse-pkt-count          0
 reverse-byte-count         0
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:42
 idle-for                   00:00:00
 idle-timeout               30
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/45
 reverse-ingress-interface  n/a
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 -
 tx-wan-ckt                 INT-WAN:INT-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         INT-WAN:INT-WAN
 reverse-ingress-ckt        -
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-03-23 12:03:13]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:43:57.416" starttime="20200323 17:43:57.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:43:57.417" level="INFO">sdwan-rule-name            policy_rule_11</msg>
<status status="PASS" endtime="20200323 17:43:57.418" starttime="20200323 17:43:57.416"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:43:57.419" starttime="20200323 17:43:57.419"></status>
</kw>
<status status="PASS" endtime="20200323 17:43:57.419" starttime="20200323 17:43:57.418"></status>
</kw>
<status status="PASS" endtime="20200323 17:43:57.420" starttime="20200323 17:43:57.414"></status>
</kw>
<kw name="Stop Stream Traffic" library="spirent1">
<arguments>
<arg>${stream3['stream_id']}</arg>
</arguments>
<msg timestamp="20200323 17:44:00.732" level="INFO">***** run sth.traffic_control successfully</msg>
<status status="PASS" endtime="20200323 17:44:00.732" starttime="20200323 17:43:57.420"></status>
</kw>
<kw name="Stop Stream Traffic" library="spirent1">
<arguments>
<arg>${stream2['stream_id']}</arg>
</arguments>
<msg timestamp="20200323 17:44:03.815" level="INFO">***** run sth.traffic_control successfully</msg>
<status status="PASS" endtime="20200323 17:44:03.815" starttime="20200323 17:44:00.733"></status>
</kw>
<kw name="Stop Stream Traffic" library="spirent1">
<arguments>
<arg>${stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20200323 17:44:07.324" level="INFO">***** run sth.traffic_control successfully</msg>
<status status="PASS" endtime="20200323 17:44:07.325" starttime="20200323 17:44:03.816"></status>
</kw>
<kw name="Delete Policy Rule" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
</arguments>
<msg timestamp="20200323 17:44:07.326" level="INFO">
DELETE IPaddress Object
</msg>
<msg timestamp="20200323 17:44:09.813" level="INFO">
PASS</msg>
<msg timestamp="20200323 17:44:09.813" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Policy rule DELETION PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20200323 17:44:09.814" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20200323 17:44:09.814" starttime="20200323 17:44:07.325"></status>
</kw>
<doc>Traffic steering based on Source IP</doc>
<tags>
<tag>P1</tag>
</tags>
<status status="PASS" endtime="20200323 17:44:09.815" critical="yes" starttime="20200323 17:41:18.011"></status>
</test>
<test id="s1-t7" name="NV_SINGLE_CPE_HYBRID_TRAFFIC_STEERING_03">
<kw name="Create Policy Rule" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
<arg>${fwp_1}</arg>
<arg>port_address_obj=${serviceobj_1}</arg>
</arguments>
<msg timestamp="20200323 17:44:09.818" level="INFO">
CREATE Policy rule
</msg>
<msg timestamp="20200323 17:44:11.283" level="INFO">
PASS</msg>
<msg timestamp="20200323 17:44:11.284" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; CREATE POLICY RULE PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20200323 17:44:11.284" level="INFO">{
	"rule": {
		"name": "policy_rule_11",
		"tag": [],
		"match": {
			"source": {
				"zone": {},
				"address": {
				
				},
				"user": {
					"user-type": "any",
					"local-database": {
						"status": "disabled"
					},
					"external-database": {
						"status": "disabled"
					}
				}
			},
			"destination": {
				"zone": {},
				"address": {
				
				}
			},
			"application": {
				
			},
			"services": {
				"services-list": ["src_port_2000"]
			},
			
			"ttl": {}
		},
		"set": {
			"lef": {
				"event": "never",
				"rate-limit": 10
			},
			"action": "allow",
			"forwarding-profile": "FWP112"
		},
		"monitor": {
			"interval": "3",
			"threshold": "5"
		}
	}
}</msg>
<status status="PASS" endtime="20200323 17:44:11.284" starttime="20200323 17:44:09.817"></status>
</kw>
<kw name="Move Policy Rule" library="VD1">
<arguments>
<arg>${CPE1['Device_name']}</arg>
<arg>${cpe1['ORG_NAME']}</arg>
<arg>Default-Policy</arg>
<arg>${plcyrule_1}</arg>
<arg>first</arg>
</arguments>
<msg timestamp="20200323 17:44:19.017" level="INFO">move devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 first
[ok][2020-03-23 12:08:59]

[edit]
Automated@VDir-BLR-NEW-01% commit
Commit complete.
[ok][2020-03-23 12:09:00]

[edit]
Automated@VDir-BLR-NEW-01% exit configuration-mode
[ok][2020-03-23 12:09:04]
Automated@VDir-BLR-NEW-01&gt;</msg>
<status status="PASS" endtime="20200323 17:44:19.017" starttime="20200323 17:44:11.285"></status>
</kw>
<kw name="REQ CLR SESSION ALL">
<kw name="Req Clr Sess All" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:44:19.821" level="INFO">${result} = request clear sessions all
[ok][2020-03-23 12:03:36]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:44:19.821" starttime="20200323 17:44:19.018"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:44:19.823" starttime="20200323 17:44:19.822"></status>
</kw>
<status status="PASS" endtime="20200323 17:44:19.823" starttime="20200323 17:44:19.018"></status>
</kw>
<kw name="SHOW SESSION SDWAN DETAIL">
<kw name="Show Session Sdwan Detail" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:44:21.028" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore</msg>
<msg timestamp="20200323 17:44:21.028" level="INFO">${result} = show orgs org IPC00190 sessions sdwan detail  | nomore
% No entries found.
[ok][2020-03-23 12:03:37]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:44:21.029" starttime="20200323 17:44:19.824"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:44:21.030" starttime="20200323 17:44:21.029"></status>
</kw>
<status status="PASS" endtime="20200323 17:44:21.030" starttime="20200323 17:44:19.824"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:44:22.035" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20200323 17:44:22.035" level="INFO">${result} = show interfaces port statistics brief | tab  | nomore
                     IF                                                                                                          
               ...</msg>
<status status="PASS" endtime="20200323 17:44:22.035" starttime="20200323 17:44:21.031"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:44:22.037" starttime="20200323 17:44:22.036"></status>
</kw>
<status status="PASS" endtime="20200323 17:44:22.037" starttime="20200323 17:44:21.030"></status>
</kw>
<kw name="SHOW COMMIT CHANGES 0">
<kw name="Show Commit Changes 0" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:44:29.505" level="INFO">show commit changes 0 | nomore</msg>
<msg timestamp="20200323 17:44:29.506" level="INFO">${result} = show commit changes 0 | nomore
#
# Created by: admin
# Date: 2020-03-23 12:03:29
# Client: netconf
#
 orgs {
     org-services IPC00190 {
         sd-wan {
             policies {
                 Def...</msg>
<status status="PASS" endtime="20200323 17:44:29.506" starttime="20200323 17:44:22.039"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:44:29.508" starttime="20200323 17:44:29.507"></status>
</kw>
<status status="PASS" endtime="20200323 17:44:29.508" starttime="20200323 17:44:22.038"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200323 17:44:39.509" level="INFO">Slept 10 seconds</msg>
<status status="PASS" endtime="20200323 17:44:39.510" starttime="20200323 17:44:29.509"></status>
</kw>
<kw name="Start Stream Traffic" library="spirent1">
<arguments>
<arg>${stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20200323 17:44:40.188" level="INFO">streamblock1
***** run sth.traffic_control successfully</msg>
<status status="PASS" endtime="20200323 17:44:40.188" starttime="20200323 17:44:39.511"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>40s</arg>
</arguments>
<msg timestamp="20200323 17:45:20.190" level="INFO">Slept 40 seconds</msg>
<status status="PASS" endtime="20200323 17:45:20.266" starttime="20200323 17:44:40.189"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:45:21.489" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20200323 17:45:21.490" level="INFO">${result} = show interfaces port statistics brief | tab  | nomore
                     IF                                                                                                                
         ...</msg>
<status status="PASS" endtime="20200323 17:45:21.490" starttime="20200323 17:45:20.286"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:45:21.494" starttime="20200323 17:45:21.491"></status>
</kw>
<status status="PASS" endtime="20200323 17:45:21.494" starttime="20200323 17:45:20.276"></status>
</kw>
<kw name="Show Session Sdwan Detail" library="CPE1">
<arguments>
<arg>source_port=2000</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:45:23.099" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select source-port 2000</msg>
<msg timestamp="20200323 17:45:23.100" level="INFO">${result} = show orgs org IPC00190 sessions sdwan detail  | nomore| select[8D | select source-port 2000
sessions sdwan detail 0 2 15284
 source-ip                  192.169.101.3
 destination-ip             192....</msg>
<status status="PASS" endtime="20200323 17:45:23.100" starttime="20200323 17:45:21.495"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=tx-wan-ckt${SPACE*17}${CPE1['WAN1_NAME']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:45:23.103" level="INFO">show orgs org IPC00190 sessions sdwan detail  | nomore| select[8D | select source-port 2000
sessions sdwan detail 0 2 15284
 source-ip                  192.169.101.3
 destination-ip             192.169.111.3
 source-port                2000
 destination-port           1024
 protocol                   6
 natted                     No
 sdwan                      Yes
 application                -
 forward-pkt-count          59250
 forward-byte-count         8176500
 reverse-pkt-count          0
 reverse-byte-count         0
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:42
 idle-for                   00:00:00
 idle-timeout               240
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/45
 reverse-ingress-interface  n/a
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 -
 tx-wan-ckt                 MPLS-WAN:MPLS-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         MPLS-WAN:MPLS-WAN
 reverse-ingress-ckt        -
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-03-23 12:04:39]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:45:23.103" starttime="20200323 17:45:23.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:45:23.104" level="INFO">tx-wan-ckt                 MPLS-WAN</msg>
<status status="PASS" endtime="20200323 17:45:23.104" starttime="20200323 17:45:23.103"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:45:23.105" starttime="20200323 17:45:23.105"></status>
</kw>
<status status="PASS" endtime="20200323 17:45:23.105" starttime="20200323 17:45:23.104"></status>
</kw>
<status status="PASS" endtime="20200323 17:45:23.106" starttime="20200323 17:45:23.100"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=sdwan-rule-name${SPACE*12}${plcyrule_1}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:45:23.108" level="INFO">show orgs org IPC00190 sessions sdwan detail  | nomore| select[8D | select source-port 2000
sessions sdwan detail 0 2 15284
 source-ip                  192.169.101.3
 destination-ip             192.169.111.3
 source-port                2000
 destination-port           1024
 protocol                   6
 natted                     No
 sdwan                      Yes
 application                -
 forward-pkt-count          59250
 forward-byte-count         8176500
 reverse-pkt-count          0
 reverse-byte-count         0
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:42
 idle-for                   00:00:00
 idle-timeout               240
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/45
 reverse-ingress-interface  n/a
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 -
 tx-wan-ckt                 MPLS-WAN:MPLS-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         MPLS-WAN:MPLS-WAN
 reverse-ingress-ckt        -
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-03-23 12:04:39]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:45:23.129" starttime="20200323 17:45:23.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:45:23.130" level="INFO">sdwan-rule-name            policy_rule_11</msg>
<status status="PASS" endtime="20200323 17:45:23.130" starttime="20200323 17:45:23.130"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:45:23.132" starttime="20200323 17:45:23.131"></status>
</kw>
<status status="PASS" endtime="20200323 17:45:23.132" starttime="20200323 17:45:23.131"></status>
</kw>
<status status="PASS" endtime="20200323 17:45:23.132" starttime="20200323 17:45:23.106"></status>
</kw>
<kw name="Stop Stream Traffic" library="spirent1">
<arguments>
<arg>${stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20200323 17:45:27.550" level="INFO">***** run sth.traffic_control successfully</msg>
<status status="PASS" endtime="20200323 17:45:27.551" starttime="20200323 17:45:23.133"></status>
</kw>
<kw name="Delete Policy Rule" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
</arguments>
<msg timestamp="20200323 17:45:27.552" level="INFO">
DELETE IPaddress Object
</msg>
<msg timestamp="20200323 17:45:29.759" level="INFO">
PASS</msg>
<msg timestamp="20200323 17:45:29.760" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Policy rule DELETION PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20200323 17:45:29.760" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20200323 17:45:29.761" starttime="20200323 17:45:27.551"></status>
</kw>
<doc>Traffic steering based on Source PORT</doc>
<tags>
<tag>P1</tag>
</tags>
<status status="PASS" endtime="20200323 17:45:29.761" critical="yes" starttime="20200323 17:44:09.816"></status>
</test>
<test id="s1-t8" name="NV_SINGLE_CPE_HYBRID_TRAFFIC_STEERING_04">
<kw name="Create Policy Rule" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
<arg>${fwp_1}</arg>
<arg>application=IPERF</arg>
</arguments>
<msg timestamp="20200323 17:45:29.764" level="INFO">
CREATE Policy rule
</msg>
<msg timestamp="20200323 17:45:31.269" level="INFO">
PASS</msg>
<msg timestamp="20200323 17:45:31.269" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; CREATE POLICY RULE PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20200323 17:45:31.269" level="INFO">{
	"rule": {
		"name": "policy_rule_11",
		"tag": [],
		"match": {
			"source": {
				"zone": {},
				"address": {
				
				},
				"user": {
					"user-type": "any",
					"local-database": {
						"status": "disabled"
					},
					"external-database": {
						"status": "disabled"
					}
				}
			},
			"destination": {
				"zone": {},
				"address": {
				
				}
			},
			"application": {
				"predefined-application-list": ["IPERF"]
				
			},
			
			"ttl": {}
		},
		"set": {
			"lef": {
				"event": "never",
				"rate-limit": 10
			},
			"action": "allow",
			"forwarding-profile": "FWP112"
		},
		"monitor": {
			"interval": "3",
			"threshold": "5"
		}
	}
}</msg>
<status status="PASS" endtime="20200323 17:45:31.270" starttime="20200323 17:45:29.763"></status>
</kw>
<kw name="Move Policy Rule" library="VD1">
<arguments>
<arg>${CPE1['Device_name']}</arg>
<arg>${cpe1['ORG_NAME']}</arg>
<arg>Default-Policy</arg>
<arg>${plcyrule_1}</arg>
<arg>first</arg>
</arguments>
<msg timestamp="20200323 17:45:38.702" level="INFO">move devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 first
[ok][2020-03-23 12:10:20]

[edit]
Automated@VDir-BLR-NEW-01% commit
Commit complete.
[ok][2020-03-23 12:10:20]

[edit]
Automated@VDir-BLR-NEW-01% exit configuration-mode
[ok][2020-03-23 12:10:23]
Automated@VDir-BLR-NEW-01&gt;</msg>
<status status="PASS" endtime="20200323 17:45:38.702" starttime="20200323 17:45:31.270"></status>
</kw>
<kw name="REQ CLR SESSION ALL">
<kw name="Req Clr Sess All" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:45:39.307" level="INFO">${result} = request clear sessions all
[ok][2020-03-23 12:04:55]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:45:39.307" starttime="20200323 17:45:38.704"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:45:39.309" starttime="20200323 17:45:39.308"></status>
</kw>
<status status="PASS" endtime="20200323 17:45:39.309" starttime="20200323 17:45:38.703"></status>
</kw>
<kw name="SHOW SESSION SDWAN DETAIL">
<kw name="Show Session Sdwan Detail" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:45:40.514" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore</msg>
<msg timestamp="20200323 17:45:40.515" level="INFO">${result} = show orgs org IPC00190 sessions sdwan detail  | nomore
% No entries found.
[ok][2020-03-23 12:04:56]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:45:40.515" starttime="20200323 17:45:39.310"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:45:40.516" starttime="20200323 17:45:40.515"></status>
</kw>
<status status="PASS" endtime="20200323 17:45:40.517" starttime="20200323 17:45:39.309"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:45:41.523" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20200323 17:45:41.523" level="INFO">${result} = show interfaces port statistics brief | tab  | nomore
                     IF                                                                                                          
               ...</msg>
<status status="PASS" endtime="20200323 17:45:41.523" starttime="20200323 17:45:40.519"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:45:41.525" starttime="20200323 17:45:41.524"></status>
</kw>
<status status="PASS" endtime="20200323 17:45:41.525" starttime="20200323 17:45:40.517"></status>
</kw>
<kw name="SHOW COMMIT CHANGES 0">
<kw name="Show Commit Changes 0" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:45:49.542" level="INFO">show commit changes 0 | nomore</msg>
<msg timestamp="20200323 17:45:49.543" level="INFO">${result} = show commit changes 0 | nomore
#
# Created by: admin
# Date: 2020-03-23 12:04:49
# Client: netconf
#
 orgs {
     org-services IPC00190 {
         sd-wan {
             policies {
                 Def...</msg>
<status status="PASS" endtime="20200323 17:45:49.543" starttime="20200323 17:45:41.526"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:45:49.545" starttime="20200323 17:45:49.544"></status>
</kw>
<status status="PASS" endtime="20200323 17:45:49.546" starttime="20200323 17:45:41.525"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200323 17:45:59.548" level="INFO">Slept 10 seconds</msg>
<status status="PASS" endtime="20200323 17:45:59.548" starttime="20200323 17:45:49.546"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM2['lan'][1]['second_host']}</arg>
</arguments>
<assign>
<var>${destip}</var>
</assign>
<msg timestamp="20200323 17:45:59.551" level="INFO">${destip} = 192.169.111.2</msg>
<status status="PASS" endtime="20200323 17:45:59.551" starttime="20200323 17:45:59.549"></status>
</kw>
<kw name="Send Commands And Expect" library="VM2">
<arguments>
<arg>pkill iperf3 &amp;</arg>
</arguments>
<status status="PASS" endtime="20200323 17:45:59.953" starttime="20200323 17:45:59.551"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200323 17:46:09.955" level="INFO">Slept 10 seconds</msg>
<status status="PASS" endtime="20200323 17:46:09.956" starttime="20200323 17:45:59.954"></status>
</kw>
<kw name="Send Commands And Expect" library="VM2">
<arguments>
<arg>iperf3 -s &amp;</arg>
</arguments>
<status status="PASS" endtime="20200323 17:46:10.359" starttime="20200323 17:46:09.956"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200323 17:46:15.360" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20200323 17:46:15.361" starttime="20200323 17:46:10.359"></status>
</kw>
<kw name="Send Commands And Expect" library="VM1">
<arguments>
<arg>iperf3 -c ${destip} &amp;</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:46:15.764" level="INFO">${result} = iperf3 -c 192.169.111.2 &amp;
[1] 12361
sathish@VM1:~$ Connecting to host 192.169.111.2, port 5201
[  4] local 192.169.101.2 port 35032 connected to 192.169.111.2 port 5201
</msg>
<status status="PASS" endtime="20200323 17:46:15.765" starttime="20200323 17:46:15.361"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200323 17:46:20.766" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20200323 17:46:20.767" starttime="20200323 17:46:15.765"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:46:21.973" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20200323 17:46:21.973" level="INFO">${result} = show interfaces port statistics brief | tab  | nomore
                     IF                                                                                                                       
  ...</msg>
<status status="PASS" endtime="20200323 17:46:21.973" starttime="20200323 17:46:20.768"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:46:21.975" starttime="20200323 17:46:21.974"></status>
</kw>
<status status="PASS" endtime="20200323 17:46:21.976" starttime="20200323 17:46:20.767"></status>
</kw>
<kw name="Show Session Sdwan Detail" library="CPE1">
<arguments>
<arg>application=iperf</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:46:23.381" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore</msg>
<msg timestamp="20200323 17:46:23.381" level="INFO">${result} = show orgs org IPC00190 sessions sdwan detail  | nomore
sessions sdwan detail 0 2 15286
 source-ip                  192.169.101.2
 destination-ip             192.169.111.2
 source-port                ...</msg>
<status status="PASS" endtime="20200323 17:46:23.381" starttime="20200323 17:46:21.976"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=tx-wan-ckt${SPACE*17}${CPE1['WAN1_NAME']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:46:23.384" level="INFO">show orgs org IPC00190 sessions sdwan detail  | nomore
sessions sdwan detail 0 2 15286
 source-ip                  192.169.101.2
 destination-ip             192.169.111.2
 source-port                35032
 destination-port           5201
 protocol                   6
 natted                     No
 sdwan                      Yes
 application                iperf
 forward-pkt-count          187243
 forward-byte-count         250140525
 reverse-pkt-count          26194
 reverse-byte-count         1390112
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:07
 idle-for                   00:00:00
 idle-timeout               240
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/45
 reverse-ingress-interface  ptvi-0/45
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 MPLS-WAN:MPLS-WAN
 tx-wan-ckt                 MPLS-WAN:MPLS-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         MPLS-WAN:MPLS-WAN
 reverse-ingress-branch     CPE12-HKG-HYBRD-IPC00190
 reverse-ingress-ckt        MPLS-WAN:MPLS-WAN
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
sessions sdwan detail 0 2 15285
 source-ip                  192.169.101.2
 destination-ip             192.169.111.2
 source-port                35030
 destination-port           5201
 protocol                   6
 natted                     No
 sdwan                      Yes
 application                iperf
 forward-pkt-count          8
 forward-byte-count         522
 reverse-pkt-count          7
 reverse-byte-count         376
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:07
 idle-for                   00:00:07
 idle-timeout               240
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/45
 reverse-ingress-interface  ptvi-0/45
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 MPLS-WAN:MPLS-WAN
 tx-wan-ckt                 MPLS-WAN:MPLS-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         MPLS-WAN:MPLS-WAN
 reverse-ingress-branch     CPE12-HKG-HYBRD-IPC00190
 reverse-ingress-ckt        MPLS-WAN:MPLS-WAN
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-03-23 12:05:39]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:46:23.384" starttime="20200323 17:46:23.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:46:23.385" level="INFO">tx-wan-ckt                 MPLS-WAN</msg>
<status status="PASS" endtime="20200323 17:46:23.385" starttime="20200323 17:46:23.385"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:46:23.387" starttime="20200323 17:46:23.387"></status>
</kw>
<status status="PASS" endtime="20200323 17:46:23.388" starttime="20200323 17:46:23.386"></status>
</kw>
<status status="PASS" endtime="20200323 17:46:23.388" starttime="20200323 17:46:23.382"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=sdwan-rule-name${SPACE*12}${plcyrule_1}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:46:23.390" level="INFO">show orgs org IPC00190 sessions sdwan detail  | nomore
sessions sdwan detail 0 2 15286
 source-ip                  192.169.101.2
 destination-ip             192.169.111.2
 source-port                35032
 destination-port           5201
 protocol                   6
 natted                     No
 sdwan                      Yes
 application                iperf
 forward-pkt-count          187243
 forward-byte-count         250140525
 reverse-pkt-count          26194
 reverse-byte-count         1390112
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:07
 idle-for                   00:00:00
 idle-timeout               240
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/45
 reverse-ingress-interface  ptvi-0/45
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 MPLS-WAN:MPLS-WAN
 tx-wan-ckt                 MPLS-WAN:MPLS-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         MPLS-WAN:MPLS-WAN
 reverse-ingress-branch     CPE12-HKG-HYBRD-IPC00190
 reverse-ingress-ckt        MPLS-WAN:MPLS-WAN
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
sessions sdwan detail 0 2 15285
 source-ip                  192.169.101.2
 destination-ip             192.169.111.2
 source-port                35030
 destination-port           5201
 protocol                   6
 natted                     No
 sdwan                      Yes
 application                iperf
 forward-pkt-count          8
 forward-byte-count         522
 reverse-pkt-count          7
 reverse-byte-count         376
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:07
 idle-for                   00:00:07
 idle-timeout               240
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/45
 reverse-ingress-interface  ptvi-0/45
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 MPLS-WAN:MPLS-WAN
 tx-wan-ckt                 MPLS-WAN:MPLS-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         MPLS-WAN:MPLS-WAN
 reverse-ingress-branch     CPE12-HKG-HYBRD-IPC00190
 reverse-ingress-ckt        MPLS-WAN:MPLS-WAN
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-03-23 12:05:39]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:46:23.391" starttime="20200323 17:46:23.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:46:23.391" level="INFO">sdwan-rule-name            policy_rule_11</msg>
<status status="PASS" endtime="20200323 17:46:23.392" starttime="20200323 17:46:23.391"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:46:23.393" starttime="20200323 17:46:23.393"></status>
</kw>
<status status="PASS" endtime="20200323 17:46:23.393" starttime="20200323 17:46:23.392"></status>
</kw>
<status status="PASS" endtime="20200323 17:46:23.394" starttime="20200323 17:46:23.388"></status>
</kw>
<kw name="Delete Policy Rule" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
</arguments>
<msg timestamp="20200323 17:46:23.395" level="INFO">
DELETE IPaddress Object
</msg>
<msg timestamp="20200323 17:46:25.836" level="INFO">
PASS</msg>
<msg timestamp="20200323 17:46:25.836" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Policy rule DELETION PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20200323 17:46:25.837" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20200323 17:46:25.837" starttime="20200323 17:46:23.394"></status>
</kw>
<doc>Traffic steering based on Application (IPERF)</doc>
<tags>
<tag>P1</tag>
</tags>
<status status="PASS" endtime="20200323 17:46:25.837" critical="yes" starttime="20200323 17:45:29.762"></status>
</test>
<test id="s1-t9" name="NV_SINGLE_CPE_HYBRID_QOS_01">
<kw name="REQ CLR SESSION ALL">
<kw name="Req Clr Sess All" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:46:26.444" level="INFO">${result} = request clear sessions all
[ok][2020-03-23 12:05:42]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:46:26.444" starttime="20200323 17:46:25.841"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:46:26.446" starttime="20200323 17:46:26.444"></status>
</kw>
<status status="PASS" endtime="20200323 17:46:26.446" starttime="20200323 17:46:25.840"></status>
</kw>
<kw name="SHOW SESSION SDWAN DETAIL">
<kw name="Show Session Sdwan Detail" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:46:27.652" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore</msg>
<msg timestamp="20200323 17:46:27.652" level="INFO">${result} = show orgs org IPC00190 sessions sdwan detail  | nomore
% No entries found.
[ok][2020-03-23 12:05:44]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:46:27.652" starttime="20200323 17:46:26.447"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:46:27.654" starttime="20200323 17:46:27.653"></status>
</kw>
<status status="PASS" endtime="20200323 17:46:27.655" starttime="20200323 17:46:26.447"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:46:28.660" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20200323 17:46:28.661" level="INFO">${result} = show interfaces port statistics brief | tab  | nomore
                     IF                                                                                                                       
  ...</msg>
<status status="PASS" endtime="20200323 17:46:28.661" starttime="20200323 17:46:27.656"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:46:28.663" starttime="20200323 17:46:28.662"></status>
</kw>
<status status="PASS" endtime="20200323 17:46:28.664" starttime="20200323 17:46:27.655"></status>
</kw>
<kw name="SHOW COMMIT CHANGES 0">
<kw name="Show Commit Changes 0" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:46:36.685" level="INFO">show commit changes 0 | nomore</msg>
<msg timestamp="20200323 17:46:36.686" level="INFO">${result} = show commit changes 0 | nomore
#
# Created by: admin
# Date: 2020-03-23 12:05:41
# Client: netconf
#
 orgs {
     org-services IPC00190 {
         sd-wan {
             policies {
                 Def...</msg>
<status status="PASS" endtime="20200323 17:46:36.686" starttime="20200323 17:46:28.665"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:46:36.687" starttime="20200323 17:46:36.686"></status>
</kw>
<status status="PASS" endtime="20200323 17:46:36.688" starttime="20200323 17:46:28.664"></status>
</kw>
<kw name="Req Clr Stats Cos Qos Plcy All" library="CPE1">
<status status="PASS" endtime="20200323 17:46:37.491" starttime="20200323 17:46:36.688"></status>
</kw>
<kw name="Show Cos Qos Policy Rules" library="CPE1">
<msg timestamp="20200323 17:46:38.896" level="INFO">show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore</msg>
<status status="PASS" endtime="20200323 17:46:38.897" starttime="20200323 17:46:37.492"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200323 17:46:48.899" level="INFO">Slept 10 seconds</msg>
<status status="PASS" endtime="20200323 17:46:48.899" starttime="20200323 17:46:38.898"></status>
</kw>
<kw name="Start Stream Traffic" library="spirent1">
<arguments>
<arg>${premium_tcp_stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20200323 17:46:49.584" level="INFO">streamblock4
***** run sth.traffic_control successfully</msg>
<status status="PASS" endtime="20200323 17:46:49.585" starttime="20200323 17:46:48.900"></status>
</kw>
<kw name="Start Stream Traffic" library="spirent1">
<arguments>
<arg>${business1_tcp_stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20200323 17:46:49.679" level="INFO">streamblock5
***** run sth.traffic_control successfully</msg>
<status status="PASS" endtime="20200323 17:46:49.679" starttime="20200323 17:46:49.585"></status>
</kw>
<kw name="Start Stream Traffic" library="spirent1">
<arguments>
<arg>${business2_tcp_stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20200323 17:46:49.777" level="INFO">streamblock6
***** run sth.traffic_control successfully</msg>
<status status="PASS" endtime="20200323 17:46:49.777" starttime="20200323 17:46:49.680"></status>
</kw>
<kw name="Start Stream Traffic" library="spirent1">
<arguments>
<arg>${business3_tcp_stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20200323 17:46:49.875" level="INFO">streamblock7
***** run sth.traffic_control successfully</msg>
<status status="PASS" endtime="20200323 17:46:49.875" starttime="20200323 17:46:49.778"></status>
</kw>
<kw name="Start Stream Traffic" library="spirent1">
<arguments>
<arg>${internet_default_tcp_stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20200323 17:46:49.969" level="INFO">streamblock8
***** run sth.traffic_control successfully</msg>
<status status="PASS" endtime="20200323 17:46:49.970" starttime="20200323 17:46:49.876"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200323 17:46:59.972" level="INFO">Slept 10 seconds</msg>
<status status="PASS" endtime="20200323 17:46:59.972" starttime="20200323 17:46:49.971"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:47:01.179" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20200323 17:47:01.180" level="INFO">${result} = show interfaces port statistics brief | tab  | nomore
                     IF                                                                                                                
         ...</msg>
<status status="PASS" endtime="20200323 17:47:01.180" starttime="20200323 17:46:59.974"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:47:01.181" starttime="20200323 17:47:01.180"></status>
</kw>
<status status="PASS" endtime="20200323 17:47:01.182" starttime="20200323 17:46:59.973"></status>
</kw>
<kw name="Show Cos Qos Policy Rules" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 17:47:02.787" level="INFO">show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore</msg>
<msg timestamp="20200323 17:47:02.787" level="INFO">${result} = show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore
                                  QOS     QOS    QOS      QOS      QOS      PPS      PPS      KBPS    ...</msg>
<status status="PASS" endtime="20200323 17:47:02.787" starttime="20200323 17:47:01.182"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:47:02.789" starttime="20200323 17:47:02.788"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=LAN1-VRF-Premium\\s+1</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:47:02.791" level="INFO">show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore
                                  QOS     QOS    QOS      QOS      QOS      PPS      PPS      KBPS     KBPS     
                           QOS    DROP    DROP   FORWARD  FORWARD  SESSION  POLICER  POLICER  POLICER  POLICER  
                           HIT    PACKET  BYTE   PACKET   BYTE     DENY     PKTS     BYTES    PKTS     BYTES    
RULE NAME                  COUNT  COUNT   COUNT  COUNT    COUNT    COUNT    DROPPED  DROPPED  DROPPED  DROPPED  
----------------------------------------------------------------------------------------------------------------
LAN1-VRF-Premium           1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Business1         1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Business2         1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Business3         1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Internet-Default  1      0       0      6947     1083732  0        0        0        0        0        
IPSEC_IN                   3      0       0      3        180      0        0        0        0        0        
IPSEC_OUT                  0      0       0      0        0        0        0        0        0        0        
ARP_IN                     0      0       0      0        0        0        0        0        0        0        
ARP_OUT                    0      0       0      0        0        0        0        0        0        0        
DHCP_IN                    0      0       0      0        0        0        0        0        0        0        
DHCP_OUT                   0      0       0      0        0        0        0        0        0        0        
INT_OUT                    0      0       0      0        0        0        0        0        0        0        
INT_IN                     15     0       0      15       950      0        0        0        0        0        
WAN_IN                     10     0       0      0        0        10       0        0        0        0        
WAN_OUT                    0      0       0      0        0        0        0        0        0        0        

[ok][2020-03-23 12:06:19]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:47:02.791" starttime="20200323 17:47:02.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:47:02.792" level="INFO">LAN1-VRF-Premium\s+1</msg>
<status status="PASS" endtime="20200323 17:47:02.792" starttime="20200323 17:47:02.791"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:47:02.794" starttime="20200323 17:47:02.793"></status>
</kw>
<status status="PASS" endtime="20200323 17:47:02.794" starttime="20200323 17:47:02.792"></status>
</kw>
<status status="PASS" endtime="20200323 17:47:02.794" starttime="20200323 17:47:02.789"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=LAN1-VRF-Business1\\s+1</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:47:02.796" level="INFO">show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore
                                  QOS     QOS    QOS      QOS      QOS      PPS      PPS      KBPS     KBPS     
                           QOS    DROP    DROP   FORWARD  FORWARD  SESSION  POLICER  POLICER  POLICER  POLICER  
                           HIT    PACKET  BYTE   PACKET   BYTE     DENY     PKTS     BYTES    PKTS     BYTES    
RULE NAME                  COUNT  COUNT   COUNT  COUNT    COUNT    COUNT    DROPPED  DROPPED  DROPPED  DROPPED  
----------------------------------------------------------------------------------------------------------------
LAN1-VRF-Premium           1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Business1         1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Business2         1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Business3         1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Internet-Default  1      0       0      6947     1083732  0        0        0        0        0        
IPSEC_IN                   3      0       0      3        180      0        0        0        0        0        
IPSEC_OUT                  0      0       0      0        0        0        0        0        0        0        
ARP_IN                     0      0       0      0        0        0        0        0        0        0        
ARP_OUT                    0      0       0      0        0        0        0        0        0        0        
DHCP_IN                    0      0       0      0        0        0        0        0        0        0        
DHCP_OUT                   0      0       0      0        0        0        0        0        0        0        
INT_OUT                    0      0       0      0        0        0        0        0        0        0        
INT_IN                     15     0       0      15       950      0        0        0        0        0        
WAN_IN                     10     0       0      0        0        10       0        0        0        0        
WAN_OUT                    0      0       0      0        0        0        0        0        0        0        

[ok][2020-03-23 12:06:19]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:47:02.796" starttime="20200323 17:47:02.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:47:02.797" level="INFO">LAN1-VRF-Business1\s+1</msg>
<status status="PASS" endtime="20200323 17:47:02.797" starttime="20200323 17:47:02.797"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:47:02.799" starttime="20200323 17:47:02.798"></status>
</kw>
<status status="PASS" endtime="20200323 17:47:02.799" starttime="20200323 17:47:02.798"></status>
</kw>
<status status="PASS" endtime="20200323 17:47:02.799" starttime="20200323 17:47:02.795"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=LAN1-VRF-Business2\\s+1</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:47:02.801" level="INFO">show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore
                                  QOS     QOS    QOS      QOS      QOS      PPS      PPS      KBPS     KBPS     
                           QOS    DROP    DROP   FORWARD  FORWARD  SESSION  POLICER  POLICER  POLICER  POLICER  
                           HIT    PACKET  BYTE   PACKET   BYTE     DENY     PKTS     BYTES    PKTS     BYTES    
RULE NAME                  COUNT  COUNT   COUNT  COUNT    COUNT    COUNT    DROPPED  DROPPED  DROPPED  DROPPED  
----------------------------------------------------------------------------------------------------------------
LAN1-VRF-Premium           1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Business1         1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Business2         1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Business3         1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Internet-Default  1      0       0      6947     1083732  0        0        0        0        0        
IPSEC_IN                   3      0       0      3        180      0        0        0        0        0        
IPSEC_OUT                  0      0       0      0        0        0        0        0        0        0        
ARP_IN                     0      0       0      0        0        0        0        0        0        0        
ARP_OUT                    0      0       0      0        0        0        0        0        0        0        
DHCP_IN                    0      0       0      0        0        0        0        0        0        0        
DHCP_OUT                   0      0       0      0        0        0        0        0        0        0        
INT_OUT                    0      0       0      0        0        0        0        0        0        0        
INT_IN                     15     0       0      15       950      0        0        0        0        0        
WAN_IN                     10     0       0      0        0        10       0        0        0        0        
WAN_OUT                    0      0       0      0        0        0        0        0        0        0        

[ok][2020-03-23 12:06:19]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:47:02.802" starttime="20200323 17:47:02.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:47:02.802" level="INFO">LAN1-VRF-Business2\s+1</msg>
<status status="PASS" endtime="20200323 17:47:02.803" starttime="20200323 17:47:02.802"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:47:02.804" starttime="20200323 17:47:02.804"></status>
</kw>
<status status="PASS" endtime="20200323 17:47:02.805" starttime="20200323 17:47:02.803"></status>
</kw>
<status status="PASS" endtime="20200323 17:47:02.805" starttime="20200323 17:47:02.800"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=LAN1-VRF-Business3\\s+1</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:47:02.807" level="INFO">show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore
                                  QOS     QOS    QOS      QOS      QOS      PPS      PPS      KBPS     KBPS     
                           QOS    DROP    DROP   FORWARD  FORWARD  SESSION  POLICER  POLICER  POLICER  POLICER  
                           HIT    PACKET  BYTE   PACKET   BYTE     DENY     PKTS     BYTES    PKTS     BYTES    
RULE NAME                  COUNT  COUNT   COUNT  COUNT    COUNT    COUNT    DROPPED  DROPPED  DROPPED  DROPPED  
----------------------------------------------------------------------------------------------------------------
LAN1-VRF-Premium           1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Business1         1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Business2         1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Business3         1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Internet-Default  1      0       0      6947     1083732  0        0        0        0        0        
IPSEC_IN                   3      0       0      3        180      0        0        0        0        0        
IPSEC_OUT                  0      0       0      0        0        0        0        0        0        0        
ARP_IN                     0      0       0      0        0        0        0        0        0        0        
ARP_OUT                    0      0       0      0        0        0        0        0        0        0        
DHCP_IN                    0      0       0      0        0        0        0        0        0        0        
DHCP_OUT                   0      0       0      0        0        0        0        0        0        0        
INT_OUT                    0      0       0      0        0        0        0        0        0        0        
INT_IN                     15     0       0      15       950      0        0        0        0        0        
WAN_IN                     10     0       0      0        0        10       0        0        0        0        
WAN_OUT                    0      0       0      0        0        0        0        0        0        0        

[ok][2020-03-23 12:06:19]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:47:02.807" starttime="20200323 17:47:02.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:47:02.808" level="INFO">LAN1-VRF-Business3\s+1</msg>
<status status="PASS" endtime="20200323 17:47:02.808" starttime="20200323 17:47:02.807"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:47:02.809" starttime="20200323 17:47:02.809"></status>
</kw>
<status status="PASS" endtime="20200323 17:47:02.810" starttime="20200323 17:47:02.808"></status>
</kw>
<status status="PASS" endtime="20200323 17:47:02.810" starttime="20200323 17:47:02.805"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=LAN1-VRF-Internet-Default\\s+(\\d{1})</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20200323 17:47:02.812" level="INFO">show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore
                                  QOS     QOS    QOS      QOS      QOS      PPS      PPS      KBPS     KBPS     
                           QOS    DROP    DROP   FORWARD  FORWARD  SESSION  POLICER  POLICER  POLICER  POLICER  
                           HIT    PACKET  BYTE   PACKET   BYTE     DENY     PKTS     BYTES    PKTS     BYTES    
RULE NAME                  COUNT  COUNT   COUNT  COUNT    COUNT    COUNT    DROPPED  DROPPED  DROPPED  DROPPED  
----------------------------------------------------------------------------------------------------------------
LAN1-VRF-Premium           1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Business1         1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Business2         1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Business3         1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Internet-Default  1      0       0      6947     1083732  0        0        0        0        0        
IPSEC_IN                   3      0       0      3        180      0        0        0        0        0        
IPSEC_OUT                  0      0       0      0        0        0        0        0        0        0        
ARP_IN                     0      0       0      0        0        0        0        0        0        0        
ARP_OUT                    0      0       0      0        0        0        0        0        0        0        
DHCP_IN                    0      0       0      0        0        0        0        0        0        0        
DHCP_OUT                   0      0       0      0        0        0        0        0        0        0        
INT_OUT                    0      0       0      0        0        0        0        0        0        0        
INT_IN                     15     0       0      15       950      0        0        0        0        0        
WAN_IN                     10     0       0      0        0        10       0        0        0        0        
WAN_OUT                    0      0       0      0        0        0        0        0        0        0        

[ok][2020-03-23 12:06:19]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" endtime="20200323 17:47:02.812" starttime="20200323 17:47:02.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20200323 17:47:02.813" level="INFO">LAN1-VRF-Internet-Default\s+(\d{1})</msg>
<status status="PASS" endtime="20200323 17:47:02.813" starttime="20200323 17:47:02.812"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:47:02.815" starttime="20200323 17:47:02.814"></status>
</kw>
<status status="PASS" endtime="20200323 17:47:02.815" starttime="20200323 17:47:02.813"></status>
</kw>
<status status="PASS" endtime="20200323 17:47:02.815" starttime="20200323 17:47:02.810"></status>
</kw>
<kw name="Stop Stream Traffic" library="spirent1">
<arguments>
<arg>${premium_tcp_stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20200323 17:47:06.086" level="INFO">***** run sth.traffic_control successfully</msg>
<status status="PASS" endtime="20200323 17:47:06.087" starttime="20200323 17:47:02.816"></status>
</kw>
<kw name="Stop Stream Traffic" library="spirent1">
<arguments>
<arg>${business1_tcp_stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20200323 17:47:08.982" level="INFO">***** run sth.traffic_control successfully</msg>
<status status="PASS" endtime="20200323 17:47:08.983" starttime="20200323 17:47:06.087"></status>
</kw>
<kw name="Stop Stream Traffic" library="spirent1">
<arguments>
<arg>${business2_tcp_stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20200323 17:47:12.232" level="INFO">***** run sth.traffic_control successfully</msg>
<status status="PASS" endtime="20200323 17:47:12.232" starttime="20200323 17:47:08.984"></status>
</kw>
<kw name="Stop Stream Traffic" library="spirent1">
<arguments>
<arg>${business3_tcp_stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20200323 17:47:15.139" level="INFO">***** run sth.traffic_control successfully</msg>
<status status="PASS" endtime="20200323 17:47:15.139" starttime="20200323 17:47:12.233"></status>
</kw>
<kw name="Stop Stream Traffic" library="spirent1">
<arguments>
<arg>${internet_default_tcp_stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20200323 17:47:18.664" level="INFO">***** run sth.traffic_control successfully</msg>
<status status="PASS" endtime="20200323 17:47:18.665" starttime="20200323 17:47:15.140"></status>
</kw>
<doc>1.1.9 QOS Based on DSCP Values</doc>
<tags>
<tag>QOS</tag>
</tags>
<status status="PASS" endtime="20200323 17:47:18.665" critical="yes" starttime="20200323 17:46:25.838"></status>
</test>
<kw type="teardown" name="CLEANUP">
<kw name="DELETE FWD PROFILE">
<kw name="Delete Service Object" library="CPE1">
<arguments>
<arg>${serviceobj_1}</arg>
</arguments>
<msg timestamp="20200323 17:47:18.671" level="INFO">
DELETE Service Object
</msg>
<msg timestamp="20200323 17:47:20.734" level="INFO">
PASS</msg>
<msg timestamp="20200323 17:47:20.734" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; ADDRESS OBJECT DELETION PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20200323 17:47:20.735" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20200323 17:47:20.735" starttime="20200323 17:47:18.670"></status>
</kw>
<kw name="Delete Address Object" library="CPE1">
<arguments>
<arg>${ipaddobj_1}</arg>
</arguments>
<msg timestamp="20200323 17:47:20.736" level="INFO">
DELETE IPaddress Object
</msg>
<msg timestamp="20200323 17:47:22.061" level="INFO">
PASS</msg>
<msg timestamp="20200323 17:47:22.062" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; ADDRESS OBJECT DELETION PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20200323 17:47:22.062" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20200323 17:47:22.062" starttime="20200323 17:47:20.735"></status>
</kw>
<kw name="Delete Address Object" library="CPE1">
<arguments>
<arg>${ipaddobj_2}</arg>
</arguments>
<msg timestamp="20200323 17:47:22.064" level="INFO">
DELETE IPaddress Object
</msg>
<msg timestamp="20200323 17:47:23.387" level="INFO">
PASS</msg>
<msg timestamp="20200323 17:47:23.388" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; ADDRESS OBJECT DELETION PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20200323 17:47:23.388" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20200323 17:47:23.389" starttime="20200323 17:47:22.063"></status>
</kw>
<kw name="Delete Fowarding Profile" library="CPE1">
<arguments>
<arg>${fwp_1}</arg>
</arguments>
<msg timestamp="20200323 17:47:23.390" level="INFO">
DELETE FWD PROFILE
</msg>
<msg timestamp="20200323 17:47:24.769" level="INFO">
PASS</msg>
<msg timestamp="20200323 17:47:24.770" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; FORWARDING PROFILE DELETION PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20200323 17:47:24.770" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20200323 17:47:24.771" starttime="20200323 17:47:23.389"></status>
</kw>
<kw name="Delete Sla Profile" library="CPE1">
<arguments>
<arg>${sla_prf_1}</arg>
</arguments>
<msg timestamp="20200323 17:47:24.772" level="INFO">
DELETE SLA profile
</msg>
<msg timestamp="20200323 17:47:26.269" level="INFO">
PASS</msg>
<msg timestamp="20200323 17:47:26.270" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; DELETE SLA Profile PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20200323 17:47:26.270" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20200323 17:47:26.270" starttime="20200323 17:47:24.771"></status>
</kw>
<kw name="Modify Interface Bandwidth" library="CPE1">
<arguments>
<arg>${CPE1['WAN1_INTF']}</arg>
<arg>${curr_intf_bw['bandwidth']['uplink']}</arg>
<arg>${curr_intf_bw['bandwidth']['downlink']}</arg>
</arguments>
<msg timestamp="20200323 17:47:27.140" level="INFO">{"bandwidth": {"downlink": 30000, "uplink": 30000}}

&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20200323 17:47:27.141" starttime="20200323 17:47:26.271"></status>
</kw>
<kw name="Get Vni Interface Bw" library="CPE1">
<arguments>
<arg>${CPE1['WAN1_INTF']}</arg>
</arguments>
<status status="PASS" endtime="20200323 17:47:27.425" starttime="20200323 17:47:27.141"></status>
</kw>
<status status="PASS" endtime="20200323 17:47:27.425" starttime="20200323 17:47:18.670"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"cleanup done"</arg>
</arguments>
<status status="PASS" endtime="20200323 17:47:27.426" starttime="20200323 17:47:27.425"></status>
</kw>
<kw name="Release Ports" library="spirent1">
<msg timestamp="20200323 17:47:29.553" level="INFO">Release resources
***** run sth.cleanup_session successfully</msg>
<status status="PASS" endtime="20200323 17:47:29.553" starttime="20200323 17:47:27.426"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>40s</arg>
</arguments>
<msg timestamp="20200323 17:48:09.555" level="INFO">Slept 40 seconds</msg>
<status status="PASS" endtime="20200323 17:48:09.555" starttime="20200323 17:47:29.554"></status>
</kw>
<status status="PASS" endtime="20200323 17:48:09.555" starttime="20200323 17:47:18.669"></status>
</kw>
<doc>A test suite with tests for SDWAN SINGLE CPE Solution.
Topology:-
____________________________
| VersaDirector |
|___________________________|
|
|
|
_____________|_______________
| WanCtrller1 |
|____________________________|
| |
| |
| |
INTERNET/MPLS
| |
| |___
______|__ ___|___
| | | |
LAN1--+ CPE1 | | CPE2 +--LAN1
|________| |_______|


Testplan Goals:-
1. CHECK WAN INTERFACES STATUS.
2. CHECK BGP NEIGHBOR STATUS.
3. CHECK LAN ROUTE.
4. Ping Test.
5. IPERF Test.</doc>
<metadata>
<item name="Version">1.0
More Info For more information about Robot Framework see http://robotframework.org
Author Sathishkumar murugesan
Date 12 Dec 2017
Executed At HOST
Test Framework Robot Framework Python</item>
</metadata>
<status status="PASS" endtime="20200323 17:48:09.556" starttime="20200323 17:34:55.961"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="9">Critical Tests</stat>
<stat fail="0" pass="9">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="1">IPERF</stat>
<stat fail="0" pass="4">P1</stat>
<stat fail="0" pass="2">PING</stat>
<stat fail="0" pass="1">QOS</stat>
<stat fail="0" pass="1">SANITY1</stat>
</tag>
<suite>
<stat fail="0" id="s1" name="SINGLE CPE HYBRID SOLUTION TEST" pass="9">SINGLE CPE HYBRID SOLUTION TEST</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
